{"basePath":"/api/v0","definitions":{"Aa":{},"ApiResponse":{"properties":{"code":{"description":"no description","format":"int32","type":"integer"},"message":{"description":"no description","type":"string"},"type":{"description":"no description","type":"string"}},"type":"object"},"BuiltinFile":{"properties":{"_id":{"readOnly":true,"type":"string"},"_timeCreated":{"format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"format":"date-time","readOnly":true,"type":"string"},"fileBlob":{"format":"byte","type":"string"},"fileContentType":{"type":"string"},"fileDescription":{"type":"string"},"fileFilename":{"type":"string"},"fileInputName":{"type":"string"},"fileSize":{"minimum":0,"type":"integer"},"fileUrl":{"type":"string"},"id":{"type":"string"}}},"BuiltinJsonapiResponse":{"properties":{"data":{"items":{"type":"object"},"type":"array"},"errors":{"items":{"type":"object"},"type":"array"},"meta":{"type":"object"}}},"BuiltinUser":{"properties":{"_id":{"readOnly":true,"type":"string"},"_timeCreated":{"format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"format":"date-time","readOnly":true,"type":"string"},"id":{"type":"string"},"jwtEncrypted":{"type":"string"},"password":{"format":"password","type":"string"},"username":{"type":"string"}}},"Category":{"properties":{"id":{"description":"no description","format":"int64","type":"integer"},"name":{"description":"no description","type":"string"}},"type":"object","xml":{"name":"Category"}},"File":{"properties":{"_id":{"readOnly":true,"type":"string"},"_timeCreated":{"format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"format":"date-time","readOnly":true,"type":"string"},"fileBlob":{"format":"byte","type":"string"},"fileContentType":{"type":"string"},"fileDescription":{"type":"string"},"fileFilename":{"type":"string"},"fileInputName":{"type":"string"},"fileSize":{"minimum":0,"type":"integer"},"fileUrl":{"type":"string"},"id":{"type":"string"}}},"Order":{"properties":{"_id":{"description":"no description","readOnly":true,"type":"string"},"_timeCreated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"complete":{"default":false,"description":"no description","type":"boolean"},"id":{"default":1,"description":"no description","format":"int64","minimum":1,"type":"integer"},"petId":{"description":"no description","format":"int64","type":"integer"},"quantity":{"description":"no description","format":"int32","type":"integer"},"shipDate":{"description":"no description","format":"date-time","type":"string"},"status":{"description":"Order Status","enum":["placed","approved","delivered"],"type":"string"}},"type":"object","xml":{"name":"Order"}},"Pet":{"properties":{"_id":{"description":"no description","readOnly":true,"type":"string"},"_timeCreated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"category":{"$ref":"#/definitions/Category"},"id":{"default":1,"description":"no description","format":"int64","minimum":1,"type":"integer"},"name":{"description":"no description","example":"doggie","type":"string"},"photoUrls":{"description":"no description","items":{"type":"string"},"type":"array","xml":{"name":"photoUrl","wrapped":true}},"status":{"description":"pet status in the store","enum":["available","pending","sold"],"type":"string"},"tags":{"description":"no description","items":{"$ref":"#/definitions/Tag"},"type":"array","xml":{"name":"tag","wrapped":true}}},"required":["name","photoUrls"],"type":"object","xml":{"name":"Pet"}},"Tag":{"properties":{"id":{"description":"no description","format":"int64","type":"integer"},"name":{"description":"no description","type":"string"}},"type":"object","xml":{"name":"Tag"}},"TestCrud":{"properties":{"_id":{"description":"no description","readOnly":true,"type":"string"},"_timeCreated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"id":{"description":"no description","type":"string"},"typeArrayItemsBoolean1":{"$ref":"#/parameters/typeArrayItemsBoolean1"},"typeArrayItemsInteger1":{"$ref":"#/parameters/typeArrayItemsInteger1"},"typeArrayItemsNumber1":{"$ref":"#/parameters/typeArrayItemsNumber1"},"typeArrayItemsNumber2":{"$ref":"#/parameters/typeArrayItemsNumber2"},"typeArrayItemsNumberCollectionFormatMultiInFormData":{"$ref":"#/parameters/typeArrayItemsNumberCollectionFormatMultiInFormData"},"typeArrayItemsString0":{"$ref":"#/parameters/typeArrayItemsString0"},"typeArrayItemsString1":{"$ref":"#/parameters/typeArrayItemsString1"},"typeArrayItemsStringCollectionFormatCsv":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatCsv"},"typeArrayItemsStringCollectionFormatJson":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatJson"},"typeArrayItemsStringCollectionFormatMultiInFormData":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatMultiInFormData"},"typeArrayItemsStringCollectionFormatPipes":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatPipes"},"typeArrayItemsStringCollectionFormatSsv":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatSsv"},"typeArrayItemsStringCollectionFormatTsv":{"$ref":"#/parameters/typeArrayItemsStringCollectionFormatTsv"},"typeArrayItemsStringEnum":{"$ref":"#/parameters/typeArrayItemsStringEnum"},"typeBoolean0":{"$ref":"#/parameters/typeBoolean0"},"typeBooleanRequired":{"$ref":"#/parameters/typeBooleanRequired"},"typeInteger0":{"$ref":"#/parameters/typeInteger0"},"typeInteger1":{"$ref":"#/parameters/typeInteger1"},"typeInteger2":{"$ref":"#/parameters/typeInteger2"},"typeNumber0":{"$ref":"#/parameters/typeNumber0"},"typeNumber1":{"$ref":"#/parameters/typeNumber1"},"typeNumber2":{"$ref":"#/parameters/typeNumber2"},"typeNumberEnum":{"$ref":"#/parameters/typeNumberEnum"},"typeNumberFormatDouble":{"$ref":"#/parameters/typeNumberFormatDouble"},"typeNumberFormatFloat":{"$ref":"#/parameters/typeNumberFormatFloat"},"typeString0":{"$ref":"#/parameters/typeString0"},"typeString1":{"$ref":"#/parameters/typeString1"},"typeStringApiKey":{"$ref":"#/parameters/typeStringApiKey"},"typeStringCharsetAscii":{"$ref":"#/parameters/typeStringCharsetAscii"},"typeStringFormatBinary":{"$ref":"#/parameters/typeStringFormatBinary"},"typeStringFormatByte":{"$ref":"#/parameters/typeStringFormatByte"},"typeStringFormatDate":{"$ref":"#/parameters/typeStringFormatDate"},"typeStringFormatDateTime":{"$ref":"#/parameters/typeStringFormatDateTime"},"typeStringFormatEmail":{"$ref":"#/parameters/typeStringFormatEmail"},"typeStringFormatJson":{"$ref":"#/parameters/typeStringFormatJson"},"typeStringFormatPhone":{"$ref":"#/parameters/typeStringFormatPhone"},"typeStringInHeader":{"$ref":"#/parameters/typeStringInHeader"},"typeStringInPath":{"$ref":"#/parameters/typeStringInPath"}},"required":["typeBooleanRequired"],"type":"object"},"TestMisc":{"properties":{"typeArrayCircularReference":{"description":"no description","items":{"$ref":"#/definitions/TestMisc"},"type":"array"},"typeBooleanRequired":{"$ref":"#/parameters/typeBooleanRequired"},"typeObjectCircularReference":{"$ref":"#/definitions/TestMisc"},"typeObjectMisc":{"description":"no description","maxProperties":5,"minProperties":1,"type":"object"},"typeStringCharsetAscii":{"$ref":"#/parameters/typeStringCharsetAscii"}},"required":["typeBooleanRequired"],"type":"object"},"User":{"properties":{"_id":{"description":"no description","readOnly":true,"type":"string"},"_timeCreated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"_timeUpdated":{"description":"no description","format":"date-time","readOnly":true,"type":"string"},"email":{"default":"a@a.com","description":"no description","format":"email","type":"string"},"firstName":{"description":"no description","type":"string"},"id":{"default":1,"description":"no description","format":"int64","minimum":1,"type":"integer"},"jwtEncrypted":{"type":"string"},"lastName":{"description":"no description","type":"string"},"password":{"description":"no description","type":"string"},"phone":{"description":"no description","type":"string"},"userStatus":{"description":"User Status","format":"int32","type":"integer"},"username":{"description":"no description","type":"string"}},"type":"object","xml":{"name":"User"}},"onErrorJsonapi":{"properties":{"data":{"description":"no description","type":"object"},"error":{"default":{},"description":"no description","type":"object"}}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"},"info":{"contact":{"email":"apiteam@swagger.io"},"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"termsOfService":"http://swagger.io/terms/","title":"Swagger Petstore","version":"1.0.0"},"parameters":{"typeArrayItemsBoolean1":{"default":[false,true],"description":"no description","in":"query","items":{"type":"boolean"},"name":"typeArrayItemsBoolean1","required":true,"type":"array"},"typeArrayItemsInteger1":{"default":[0,1],"description":"no description","in":"query","items":{"type":"integer"},"name":"typeArrayItemsInteger1","required":true,"type":"array"},"typeArrayItemsNumber1":{"default":[0.5,1.5],"description":"no description","in":"query","items":{"type":"number"},"name":"typeArrayItemsNumber1","required":true,"type":"array"},"typeArrayItemsNumber2":{"default":[0.5,1.5],"description":"no description","in":"query","items":{"type":"number"},"maxItems":5,"minItems":1,"name":"typeArrayItemsNumber2","required":true,"type":"array","uniqueItems":true},"typeArrayItemsNumberCollectionFormatMultiInFormData":{"collectionFormat":"multi","default":[0.5,1.5],"description":"no description","in":"formData","items":{"type":"number"},"name":"typeArrayItemsNumberCollectionFormatMultiInFormData","required":true,"type":"array"},"typeArrayItemsString0":{"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsString0","type":"array"},"typeArrayItemsString1":{"default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsString1","required":true,"type":"array"},"typeArrayItemsStringCollectionFormatCsv":{"collectionFormat":"csv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatCsv","required":true,"type":"array"},"typeArrayItemsStringCollectionFormatJson":{"default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatJson","required":true,"type":"array","x-swgg-collectionFormat":"json"},"typeArrayItemsStringCollectionFormatMultiInFormData":{"collectionFormat":"multi","default":["aa","bb"],"description":"no description","in":"formData","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatMultiInFormData","required":true,"type":"array"},"typeArrayItemsStringCollectionFormatPipes":{"collectionFormat":"pipes","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatPipes","required":true,"type":"array"},"typeArrayItemsStringCollectionFormatSsv":{"collectionFormat":"ssv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatSsv","required":true,"type":"array"},"typeArrayItemsStringCollectionFormatTsv":{"collectionFormat":"tsv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatTsv","required":true,"type":"array"},"typeArrayItemsStringEnum":{"default":["aa","bb"],"description":"no description","enum":["aa","bb"],"in":"query","items":{"type":"string"},"name":"typeArrayItemsStringEnum","required":true,"type":"array"},"typeBoolean0":{"description":"no description","in":"query","name":"typeBoolean0","type":"boolean"},"typeBooleanRequired":{"default":true,"description":"no description","in":"query","name":"typeBooleanRequired","required":true,"type":"boolean"},"typeInteger0":{"description":"no description","in":"query","name":"typeInteger0","type":"integer"},"typeInteger1":{"default":2,"description":"no description","in":"query","maximum":3,"minimum":1,"multipleOf":2,"name":"typeInteger1","type":"integer"},"typeInteger2":{"default":2,"description":"no description","exclusiveMaximum":true,"exclusiveMinimum":true,"in":"query","maximum":3,"minimum":1,"multipleOf":2,"name":"typeInteger2","type":"integer"},"typeNumber0":{"description":"no description","in":"query","name":"typeNumber0","type":"number"},"typeNumber1":{"description":"no description","exclusiveMaximum":true,"in":"query","maximum":-0.25,"multipleOf":0.5,"name":"typeNumber1","type":"number"},"typeNumber2":{"description":"no description","exclusiveMinimum":true,"in":"query","minimum":0.25,"multipleOf":0.5,"name":"typeNumber2","type":"number"},"typeNumberEnum":{"description":"no description","enum":[0.5,1.5],"in":"query","name":"typeNumberEnum","type":"number"},"typeNumberFormatDouble":{"default":0.5,"description":"no description","format":"double","in":"query","name":"typeNumberFormatDouble","type":"number"},"typeNumberFormatFloat":{"default":0.5,"description":"no description","format":"float","in":"query","name":"typeNumberFormatFloat","type":"number"},"typeString0":{"description":"no description","in":"query","name":"typeString0","type":"string"},"typeString1":{"default":"0123456789012345","description":"no description","in":"query","maxLength":19,"minLength":15,"name":"typeString1","pattern":"^\\w*?$","required":true,"type":"string"},"typeStringApiKey":{"description":"no description","in":"query","name":"typeStringApiKey","type":"string","x-swgg-apiKey":true},"typeStringCharsetAscii":{"default":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~","description":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~","in":"query","name":"typeStringCharsetAscii","required":true,"type":"string"},"typeStringFormatBinary":{"default":[0,1],"description":"no description","format":"binary","in":"query","name":"typeStringFormatBinary","type":"string"},"typeStringFormatByte":{"default":"AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn8=","description":"no description","format":"byte","in":"query","name":"typeStringFormatByte","type":"string"},"typeStringFormatDate":{"default":"1970.01.01","description":"no description","format":"date","in":"query","name":"typeStringFormatDate","type":"string"},"typeStringFormatDateTime":{"default":"1970-01-01T00:00:00.000Z","description":"no description","format":"date-time","in":"query","name":"typeStringFormatDateTime","type":"string"},"typeStringFormatEmail":{"default":"q@q.com","description":"no description","format":"email","in":"query","name":"typeStringFormatEmail","type":"string"},"typeStringFormatJson":{"default":"{}","description":"no description","format":"json","in":"query","name":"typeStringFormatJson","type":"string"},"typeStringFormatPhone":{"description":"no description","format":"phone","in":"query","name":"typeStringFormatPhone","type":"string"},"typeStringInHeader":{"default":"aa","description":"no description","in":"header","name":"typeStringInHeader","required":true,"type":"string"},"typeStringInPath":{"default":"aa","description":"no description","in":"path","name":"typeStringInPath","required":true,"type":"string"}},"paths":{"/file/crudCountManyByQuery":{"get":{"consumes":[],"operationId":"file.crudCountManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"count many File objects by query","tags":["file"]}},"/file/crudGetManyByQuery":{"get":{"consumes":[],"operationId":"file.crudGetManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"},{"default":null,"description":"projection-fields param","format":"json","in":"query","name":"_queryFields","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"string"},"x-swgg-type":"array"},{"default":20,"description":"cursor-limit param","in":"query","name":"_queryLimit","required":true,"type":"integer"},{"default":0,"description":"cursor-skip param","in":"query","name":"_querySkip","type":"integer"},{"default":[{"fieldName":"id"},{"fieldName":"_timeUpdated","isDescending":true}],"description":"cursor-sort param","format":"json","in":"query","name":"_querySort","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"object"},"x-swgg-type":"array"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get many File objects by query","tags":["file"]}},"/file/crudRemoveOneById.id.id":{"delete":{"consumes":[],"operationId":"file.crudRemoveOneById.id.id","parameters":[{"description":"File id","in":"query","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"remove one File object by id","tags":["file"]}},"/file/crudSetOneById.id.id":{"put":{"consumes":[],"operationId":"file.crudSetOneById.id.id","parameters":[{"description":"File id","in":"query","name":"id","type":"string"},{"description":"File object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/File"}}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or replace one File object by id","tags":["file"]}},"/file/crudUpdateOneById.id.id":{"patch":{"consumes":[],"operationId":"file.crudUpdateOneById.id.id","parameters":[{"description":"File id","in":"query","name":"id","type":"string"},{"description":"File object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/File"},"x-swgg-notRequired":true}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or update one File object by id","tags":["file"]}},"/file/fileGetOneById.id.id":{"get":{"consumes":[],"description":"no description","operationId":"file.fileGetOneById.id.id","parameters":[{"default":"testVideo1","description":"File id","in":"query","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"type":"file"}}},"summary":"get one File file by id","tags":["file"],"x-swgg-consumes0":"application/octet-stream"}},"/file/fileUploadManyByForm.1":{"post":{"consumes":["multipart/form-data"],"operationId":"file.fileUploadManyByForm.1","parameters":[{"description":"File file description","in":"formData","name":"fileDescription","type":"string"},{"description":"File file to upload by form","in":"formData","name":"file1","type":"file"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"upload many File files by form","tags":["file"],"x-swgg-consumes0":"multipart/form-data"}},"/file/fileUploadManyByForm.2":{"post":{"consumes":["multipart/form-data"],"operationId":"file.fileUploadManyByForm.2","parameters":[{"description":"File file description","in":"formData","name":"fileDescription","type":"string"},{"description":"File file to upload by form","in":"formData","name":"file1","type":"file"},{"description":"File file to upload by form","in":"formData","name":"file2","type":"file"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"upload many File files by form","tags":["file"],"x-swgg-consumes0":"multipart/form-data"}},"/pet":{"post":{"consumes":["application/json","application/xml"],"description":"no description","operationId":"addPet","parameters":[{"description":"Pet object that needs to be added to the store","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"produces":["application/xml","application/json"],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Add a new pet to the store","tags":["pet"]},"put":{"consumes":["application/json","application/xml"],"description":"no description","operationId":"updatePet","parameters":[{"description":"Pet object that needs to be added to the store","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"produces":["application/xml","application/json"],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Update an existing pet","tags":["pet"]}},"/pet/crudGetManyByQuery":{"get":{"consumes":[],"operationId":"pet.crudGetManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"},{"default":null,"description":"projection-fields param","format":"json","in":"query","name":"_queryFields","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"string"},"x-swgg-type":"array"},{"default":20,"description":"cursor-limit param","in":"query","name":"_queryLimit","required":true,"type":"integer"},{"default":0,"description":"cursor-skip param","in":"query","name":"_querySkip","type":"integer"},{"default":[{"fieldName":"id"},{"fieldName":"_timeUpdated","isDescending":true}],"description":"cursor-sort param","format":"json","in":"query","name":"_querySort","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"object"},"x-swgg-type":"array"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get many Pet objects by query","tags":["pet"]}},"/pet/findByStatus":{"get":{"consumes":[],"description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","parameters":[{"collectionFormat":"multi","description":"Status values that need to be considered for filter","in":"query","items":{"default":"available","enum":["available","pending","sold"],"type":"string"},"name":"status","required":true,"type":"array"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"items":{"$ref":"#/definitions/Pet"},"type":"array"}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Finds Pets by status","tags":["pet"]}},"/pet/findByTags":{"get":{"consumes":[],"deprecated":true,"description":"Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","parameters":[{"collectionFormat":"multi","description":"Tags to filter by","in":"query","items":{"type":"string"},"name":"tags","required":true,"type":"array"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"items":{"$ref":"#/definitions/Pet"},"type":"array"}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Finds Pets by tags","tags":["pet"]}},"/pet/{petId}":{"delete":{"consumes":[],"description":"no description","operationId":"deletePet","parameters":[{"description":"no description","in":"header","name":"api_key","type":"string"},{"description":"Pet id to delete","format":"int64","in":"path","name":"petId","required":true,"type":"integer"}],"produces":["application/xml","application/json"],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Deletes a pet","tags":["pet"]},"get":{"consumes":[],"description":"Returns a single pet","operationId":"getPetById","parameters":[{"description":"ID of pet to return","format":"int64","in":"path","name":"petId","required":true,"type":"integer"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}],"summary":"Find pet by ID","tags":["pet"]},"post":{"consumes":["application/x-www-form-urlencoded"],"description":"no description","operationId":"updatePetWithForm","parameters":[{"description":"ID of pet that needs to be updated","format":"int64","in":"path","name":"petId","required":true,"type":"integer"},{"description":"Updated name of the pet","in":"formData","name":"name","type":"string"},{"description":"Updated status of the pet","in":"formData","name":"status","type":"string"}],"produces":["application/xml","application/json"],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"Updates a pet in the store with form data","tags":["pet"]}},"/pet/{petId}/uploadImage":{"post":{"consumes":["multipart/form-data"],"description":"no description","operationId":"uploadFile","parameters":[{"description":"ID of pet to update","format":"int64","in":"path","name":"petId","required":true,"type":"integer"},{"description":"Additional data to pass to server","in":"formData","name":"file1","type":"string"},{"description":"file to upload","in":"formData","name":"file","type":"file"}],"produces":["application/json"],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"summary":"uploads an image","tags":["pet"],"x-swgg-consumes0":"multipart/form-data"}},"/store/crudGetManyByQuery":{"get":{"consumes":[],"operationId":"store.crudGetManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"},{"default":null,"description":"projection-fields param","format":"json","in":"query","name":"_queryFields","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"string"},"x-swgg-type":"array"},{"default":20,"description":"cursor-limit param","in":"query","name":"_queryLimit","required":true,"type":"integer"},{"default":0,"description":"cursor-skip param","in":"query","name":"_querySkip","type":"integer"},{"default":[{"fieldName":"id"},{"fieldName":"_timeUpdated","isDescending":true}],"description":"cursor-sort param","format":"json","in":"query","name":"_querySort","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"object"},"x-swgg-type":"array"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get many Order objects by query","tags":["store"]}},"/store/crudUpdateOneById.id.id":{"patch":{"consumes":[],"operationId":"store.crudUpdateOneById.id.id","parameters":[{"description":"Order id","format":"int64","in":"query","name":"id","type":"integer"},{"description":"Order object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Order"},"x-swgg-notRequired":true}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or update one Order object by id","tags":["store"]}},"/store/inventory":{"get":{"consumes":[],"description":"Returns a map of status codes to quantities","operationId":"getInventory","parameters":[],"produces":["application/json"],"responses":{"200":{"description":"successful operation","schema":{"additionalProperties":{"format":"int32","type":"integer"},"type":"object"}}},"security":[{"api_key":[]}],"summary":"Returns pet inventories by status","tags":["store"]}},"/store/order":{"post":{"consumes":[],"description":"no description","operationId":"placeOrder","parameters":[{"description":"order placed for purchasing the pet","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/Order"}}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}},"summary":"Place an order for a pet","tags":["store"]}},"/store/order/{orderId}":{"delete":{"consumes":[],"description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","parameters":[{"description":"ID of the order that needs to be deleted","format":"int64","in":"path","minimum":1,"name":"orderId","required":true,"type":"integer"}],"produces":["application/xml","application/json"],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}},"summary":"Delete purchase order by ID","tags":["store"]},"get":{"consumes":[],"description":"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions","operationId":"getOrderById","parameters":[{"description":"ID of pet that needs to be fetched","format":"int64","in":"path","maximum":10,"minimum":1,"name":"orderId","required":true,"type":"integer"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}},"summary":"Find purchase order by ID","tags":["store"]}},"/user":{"post":{"consumes":[],"description":"This can only be done by the logged in user.","operationId":"createUser","parameters":[{"description":"Created user object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"produces":["application/xml","application/json"],"responses":{"default":{"description":"successful operation"}},"summary":"Create user","tags":["user"]}},"/user/createWithArray":{"post":{"consumes":[],"description":"no description","operationId":"createUsersWithArrayInput","parameters":[{"description":"List of user object","in":"body","name":"body","required":true,"schema":{"items":{"$ref":"#/definitions/User"},"type":"array"}}],"produces":["application/xml","application/json"],"responses":{"default":{"description":"successful operation"}},"summary":"Creates list of users with given input array","tags":["user"]}},"/user/createWithList":{"post":{"consumes":[],"description":"no description","operationId":"createUsersWithListInput","parameters":[{"description":"List of user object","in":"body","name":"body","required":true,"schema":{"items":{"$ref":"#/definitions/User"},"type":"array"}}],"produces":["application/xml","application/json"],"responses":{"default":{"description":"successful operation"}},"summary":"Creates list of users with given input array","tags":["user"]}},"/user/crudCountManyByQuery":{"get":{"consumes":[],"operationId":"user.crudCountManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"count many User objects by query","tags":["user"]}},"/user/crudGetManyByQuery":{"get":{"consumes":[],"operationId":"user.crudGetManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"},{"default":null,"description":"projection-fields param","format":"json","in":"query","name":"_queryFields","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"string"},"x-swgg-type":"array"},{"default":20,"description":"cursor-limit param","in":"query","name":"_queryLimit","required":true,"type":"integer"},{"default":0,"description":"cursor-skip param","in":"query","name":"_querySkip","type":"integer"},{"default":[{"fieldName":"id"},{"fieldName":"_timeUpdated","isDescending":true}],"description":"cursor-sort param","format":"json","in":"query","name":"_querySort","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"object"},"x-swgg-type":"array"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get many User objects by query","tags":["user"]}},"/user/crudRemoveOneById.username.username":{"delete":{"consumes":[],"operationId":"user.crudRemoveOneById.username.username","parameters":[{"description":"User username","in":"query","name":"username","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"remove one User object by username","tags":["user"]}},"/user/crudSetOneById.username.username":{"put":{"consumes":[],"operationId":"user.crudSetOneById.username.username","parameters":[{"description":"User username","in":"query","name":"username","type":"string"},{"description":"User object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or replace one User object by username","tags":["user"]}},"/user/crudUpdateOneById.username.username":{"patch":{"consumes":[],"operationId":"user.crudUpdateOneById.username.username","parameters":[{"description":"User username","in":"query","name":"username","type":"string"},{"description":"User object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/User"},"x-swgg-notRequired":true}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or update one User object by username","tags":["user"]}},"/user/login":{"get":{"consumes":[],"description":"no description","operationId":"loginUser","parameters":[{"description":"The user name for login","in":"query","name":"username","required":true,"type":"string"},{"description":"The password for login in clear text","in":"query","name":"password","required":true,"type":"string"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","headers":{"X-Expires-After":{"description":"date in UTC when token expires","format":"date-time","type":"string"},"X-Rate-Limit":{"description":"calls per hour allowed by the user","format":"int32","type":"integer"}},"schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"}},"summary":"Logs user into the system","tags":["user"]}},"/user/logout":{"get":{"consumes":[],"description":"no description","operationId":"logoutUser","parameters":[],"produces":["application/xml","application/json"],"responses":{"default":{"description":"successful operation"}},"summary":"Logs out current logged in user session","tags":["user"]}},"/user/userLoginByPassword":{"get":{"consumes":[],"operationId":"user.userLoginByPassword","parameters":[{"description":"The user name for login","in":"query","name":"username","required":true,"type":"string"},{"description":"The password for login in clear text","in":"query","name":"password","required":true,"type":"string"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"login by password","tags":["user"]}},"/user/userLogout":{"get":{"consumes":[],"operationId":"user.userLogout","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"logout","tags":["user"]}},"/user/{username}":{"delete":{"consumes":[],"description":"This can only be done by the logged in user.","operationId":"deleteUser","parameters":[{"description":"The name that needs to be deleted","in":"path","name":"username","required":true,"type":"string"}],"produces":["application/xml","application/json"],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}},"summary":"Delete user","tags":["user"]},"get":{"consumes":[],"description":"no description","operationId":"getUserByName","parameters":[{"description":"The name that needs to be fetched. Use user1 for testing. ","in":"path","name":"username","required":true,"type":"string"}],"produces":["application/xml","application/json"],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}},"summary":"Get user by user name","tags":["user"]},"put":{"consumes":[],"description":"This can only be done by the logged in user.","operationId":"updateUser","parameters":[{"description":"name that need to be updated","in":"path","name":"username","required":true,"type":"string"},{"description":"Updated user object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/User"}}],"produces":["application/xml","application/json"],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}},"summary":"Updated user","tags":["user"]}},"/x-test-markdown/description":{"get":{"consumes":[],"description":"# swgg\nthis zero-dependency package will run a virtual swagger-ui server with persistent-storage in the browser, that your webapp can use (in-place of a real backend), with a working web-demo\n\n# live web demo\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app)\n\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app)\n\n\n\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-swgg.svg)](https://travis-ci.org/kaizhu256/node-swgg) [![coverage](https://kaizhu256.github.io/node-swgg/build/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build/coverage.html/index.html)\n\n[![build commit status](https://kaizhu256.github.io/node-swgg/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-swgg)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-swgg/tree/master) | [beta](https://github.com/kaizhu256/node-swgg/tree/beta) | [alpha](https://github.com/kaizhu256/node-swgg/tree/alpha)|\n|--:|:--|:--|:--|\n| test-server-github : | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/app)|\n| test-server-heroku : | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-alpha.herokuapp.com)|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/test-report.html)|\n| coverage : | [![coverage](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..alpha..travis-ci.org)|\n\n[![npmPackageListing](https://kaizhu256.github.io/node-swgg/build/screenshot.npmPackageListing.svg)](https://github.com/kaizhu256/node-swgg)\n\n\n\n# table of contents\n1. [cdn download](#cdn-download)\n1. [documentation](#documentation)\n1. [quickstart standalone app](#quickstart-standalone-app)\n1. [quickstart example.js](#quickstart-examplejs)\n1. [extra screenshots](#extra-screenshots)\n1. [package.json](#packagejson)\n1. [changelog of last 50 commits](#changelog-of-last-50-commits)\n1. [internal build script](#internal-build-script)\n1. [misc](#misc)\n\n\n\n# cdn download\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.html](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.html)\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.swagger.json](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.swagger.json)\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.utility2.rollup.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.utility2.rollup.js)\n\n\n\n# documentation\n#### api doc\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html)\n\n[![apidoc](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html)\n\n#### cli help\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.npmPackageCliHelp.svg)\n\n#### todo\n- add input-type=date and input-type=time\n- update function swaggerJsonFromAjax to inline definitions\n- add swagger.json editor\n- allow parsing of default path-argument, e.g. /aa/{bb=1}/{cc=2}\n- add hmacSha256 support for wechat-pay\n- add property parameters.x-swgg-persist to persist to localStorage\n- revamp datatable with card-expansion ui\n- add authorization-header hook\n- add middlewareAcl\n- add api userPasswordChange\n- add cached version crudGetManyByQueryCached\n- none\n\n#### changelog 2019.8.1\n- npm publish 2019.8.1\n- create function eventEmitterCreate\n- merge class _http.IncomingMessage, _http.ServerResponse into function _http.request\n- jslint - remove unexpected_a hacks\n- jslint - migrate from let-declaration to var-declaration\n- inline lib.puppeteer.js into assets.app.js\n- remove electron dependency\n- revamp function local.ajaxProgressUpdate with window.domElementAjaxProgress1\n- jslint - remove ternary-operator/newline comment preceding bra\n- jslint - remove allow-method-chain-newline hack\n- jslint - upgrade to jslint edition 2019.8.3\n- rename coverage-hack to hack-istanbul, gotoNext to gotoNext, gotoState to gotoState, jslint-hack to hack-jslint\n- istanbul - switch parser from esprima to acorn v6.3.0\n- none\n\n#### this package requires\n- darwin or linux os\n\n#### this swagger-implementation is compliant with json-schema-validation (draft-04)\n- [https://json-schema.org/draft-04/json-schema-validation.html](https://json-schema.org/draft-04/json-schema-validation.html)\n\n#### this swagger-implementation is compliant with OpenAPI Specification (2.0)\n- [https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md](https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md)\n\n\n\n# quickstart standalone app\n#### to run this example, follow instruction in script below\n- [assets.app.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.app.js)\n```shell\n# example.sh\n\n# this shell script will download and run a web-demo of swgg as a standalone app\n\n# 1. download standalone app\ncurl -O https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.app.js\n# 2. run standalone app\nPORT=8081 node ./assets.app.js\n# 3. open a browser to http://127.0.0.1:8081 and play with web-demo\n# 4. edit file assets.app.js to suit your needs\n```\n\n#### output from browser\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.svg)\n\n\n\n# quickstart example.js\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### to run this example, follow instruction in script below\n- [example.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/example.js)\n```javascript\n/*\nexample.js\n\nthis script will run a web-demo of swgg\n\ninstruction\n    1. save this script as example.js\n    2. run shell-command:\n        $ npm install kaizhu256/node-swgg#alpha && \\\n            PORT=8081 node example.js\n    3. open a browser to http://127.0.0.1:8081 and play with web-demo\n    4. edit this script to suit your needs\n*/\n\n\n\n/* istanbul instrument in package swgg */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    let consoleError;\n    let local;\n    // init globalThis\n    globalThis.globalThis = globalThis.globalThis || globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function (...argList) {\n        /*\n         * this function will both print <argList> to stderr\n         * and return <argList>[0]\n         */\n            // debug argList\n            globalThis[\"debug\\u0049nlineArgList\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof globalThis.XMLHttpRequest === \"function\"\n        && globalThis.navigator\n        && typeof globalThis.navigator.userAgent === \"string\"\n    );\n    // init function\n    local.assertOrThrow = function (passed, message) {\n    /*\n     * this function will throw err.<message> if <passed> is falsy\n     */\n        let err;\n        if (passed) {\n            return;\n        }\n        err = (\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is errObj, then leave as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw err;\n    };\n    local.fsRmrfSync = function (dir) {\n    /*\n     * this function will sync \"rm -rf\" <dir>\n     */\n        let child_process;\n        try {\n            child_process = require(\"child_process\");\n        } catch (ignore) {\n            return;\n        }\n        child_process.spawnSync(\"rm\", [\n            \"-rf\", dir\n        ], {\n            stdio: [\n                \"ignore\", 1, 2\n            ]\n        });\n    };\n    local.fsWriteFileWithMkdirpSync = function (file, data) {\n    /*\n     * this function will sync write <data> to <file> with \"mkdir -p\"\n     */\n        let fs;\n        try {\n            fs = require(\"fs\");\n        } catch (ignore) {\n            return;\n        }\n        // try to write file\n        try {\n            fs.writeFileSync(file, data);\n        } catch (ignore) {\n            // mkdir -p\n            require(\"child_process\").spawnSync(\n                \"mkdir\",\n                [\n                    \"-p\", require(\"path\").dirname(file)\n                ],\n                {\n                    stdio: [\n                        \"ignore\", 1, 2\n                    ]\n                }\n            );\n            // rewrite file\n            fs.writeFileSync(file, data);\n        }\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        target = target || {};\n        Object.keys(source || {}).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    local.value = function (val) {\n    /*\n     * this function will return <val>\n     */\n        return val;\n    };\n    local.valueOrEmptyList = function (val) {\n    /*\n     * this function will return <val> or []\n     */\n        return val || [];\n    };\n    local.valueOrEmptyObject = function (val) {\n    /*\n     * this function will return <val> or {}\n     */\n        return val || {};\n    };\n    local.valueOrEmptyString = function (val) {\n    /*\n     * this function will return <val> or \"\"\n     */\n        return val || \"\";\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}((typeof globalThis === \"object\" && globalThis) || (function () {\n    return Function(\"return this\")(); // jslint ignore:line\n}())));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2_rollup\n    || globalThis.utility2_swgg\n    || require(\"swgg\")\n);\n// init exports\nglobalThis.local = local;\n// init assets\nlocal.assetsDict[\"/assets.swgg.swagger.json\"] = (\n    local.assetsDict[\"/assets.swgg.swagger.petstore.json\"]\n);\n// load db\nlocal.db.dbLoad(function () {\n    console.error(\"db loaded from \" + local.storageDir);\n});\n}());\n\n\n\n// run shared js-env code - function\n(function () {\nlocal.middlewareCrudCustom = function (req, response, nextMiddleware) {\n/*\n * this function will run the middleware to run custom-crud-operations\n */\n    let crud;\n    let opt;\n    let result;\n    opt = {};\n    local.gotoNext(opt, function (err, data) {\n        switch (opt.gotoState) {\n        case 1:\n            crud = req.swgg.crud;\n            switch (crud.crudType[0]) {\n            // hack-istanbul - test err handling-behavior\n            case \"crudErrorPre\":\n                opt.gotoNext(local.errDefault);\n                return;\n            case \"getInventory\":\n                crud.dbTable.crudGetManyByQuery({\n                    query: {},\n                    projection: [\n                        \"status\"\n                    ]\n                }, opt.gotoNext);\n                break;\n            default:\n                opt.gotoState = Infinity;\n                opt.gotoNext();\n            }\n            break;\n        case 2:\n            switch (crud.crudType[0]) {\n            case \"getInventory\":\n                result = {};\n                data.forEach(function (element) {\n                    result[element.status] = result[element.status] || 0;\n                    result[element.status] += 1;\n                });\n                opt.gotoNext(null, result);\n                break;\n            }\n            break;\n        case 3:\n            local.swgg.serverRespondJsonapi(req, response, err, data);\n            break;\n        default:\n            nextMiddleware(err, data);\n        }\n    });\n    opt.gotoState = 0;\n    opt.gotoNext();\n};\n\nlocal.middlewareInitCustom = function (req, response, nextMiddleware) {\n/*\n * this function will run the middleware to custom-init <req> and <res>\n */\n    // enable cors\n    // https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n    response.setHeader(\n        \"Access-Control-Allow-Methods\",\n        \"DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT\"\n    );\n    response.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    // init content-type\n    response.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n    // ignore .map files\n    if (req.urlParsed.pathname.slice(-4) === \".map\") {\n        local.serverRespondDefault(req, response, 404);\n        return;\n    }\n    nextMiddleware();\n};\n}());\n\n\n\n// run shared js-env code - init-after\n(function () {\n// init assets\n/* jslint ignore:start */\nlocal.assetsDict['/assets.index.template.html'] = local.assetsDict['/assets.swgg.html']\n    .replace((/\\n<\\/script>\\n/), '\\\n\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n<a\\n\\\n    {{#if env.npm_package_homepage}}\\n\\\n    href=\"{{env.npm_package_homepage}}\"\\n\\\n    {{/if env.npm_package_homepage}}\\n\\\n    target=\"_blank\"\\n\\\n>\\n\\\nutility2-comment -->\\n\\\n    {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n</a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" id=\"buttonTestRun1\">run internal test</button><br>\\n\\\n<div class=\"uiAnimateSlide\" id=\"htmlTestReport1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<!-- custom-html-start -->\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbReset\">reset database</button><br>\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbExport\">export database -&gt; file</button><br>\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImport\">import database &lt;- file</button><br>\\n\\\n</button><br>\\n\\\n<input class=\"onchange zeroPixel\" type=\"file\" id=\"dbImportInput1\">\\n\\\n')\n            .replace('assets.swgg.swagger.json', 'assets.swgg.swagger.server.json')\n            .replace((/\\n<script src=[\\S\\s]*\\n<\\/html>\\n/), '\\\n\\n\\\n<!-- custom-html-end -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore.counter += 1;</script>\\n\\\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.swgg.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore();</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\n(function () {\\n\\\n\"use strict\";\\n\\\nlet htmlTestReport1;\\n\\\nlet local;\\n\\\nhtmlTestReport1 = document.querySelector(\"#htmlTestReport1\");\\n\\\nlocal = window.utility2;\\n\\\nif (!(htmlTestReport1 && local)) {\\n\\\n    return;\\n\\\n}\\n\\\nlocal.on(\"utility2.testRunProgressUpdate\", function (testReport) {\\n\\\n    htmlTestReport1.innerHTML = local.testReportMerge(testReport, {});\\n\\\n});\\n\\\nlocal.on(\"utility2.testRunStart\", function (testReport) {\\n\\\n    local.uiAnimateSlideDown(htmlTestReport1);\\n\\\n    htmlTestReport1.innerHTML = local.testReportMerge(testReport, {});\\n\\\n});\\n\\\n}());\\n\\\n</script>\\n\\\n</body>\\n\\\n</html>\\n\\\n');\n/* jslint ignore:end */\n\n\n\n// init middleware\nlocal.middlewareList = [\n    local.middlewareInit,\n    local.middlewareForwardProxy,\n    local.middlewareAssetsCached,\n    local.swgg.middlewareRouter,\n    local.swgg.middlewareUserLogin,\n    local.middlewareInitCustom,\n    local.middlewareJsonpStateInit,\n    local.middlewareBodyRead,\n    local.swgg.middlewareBodyParse,\n    local.swgg.middlewareValidate,\n    local.middlewareCrudCustom,\n    local.swgg.middlewareCrudBuiltin,\n    local.swgg.middlewareCrudEnd\n];\nlocal.utility2.middlewareList = local.middlewareList;\n// run test-server\nlocal.testRunServer(local);\n/* validateLineSortedReset */\n// init petstore-api - frontend\nlocal.tmp = JSON.parse(local.assetsDict[\"/assets.swgg.swagger.petstore.json\"]);\ndelete local.tmp.basePath;\ndelete local.tmp.host;\ndelete local.tmp.schemes;\nlocal.swgg.apiUpdate(local.tmp);\n// init petstore-api - backend\nlocal.swgg.apiUpdate({\n    definitions: {\n        File: {\n            allOf: [\n                {\n                    $ref: \"#/definitions/BuiltinFile\"\n                }\n            ]\n        },\n        Pet: {\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        },\n        Order: {\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        },\n        User: {\n            allOf: [\n                {\n                    $ref: \"#/definitions/BuiltinUser\"\n                }\n            ],\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                email: {\n                    default: \"a@a.com\",\n                    format: \"email\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        }\n    },\n    tags: [\n        {\n            description: \"builtin-file model\",\n            name: \"file\"\n        }\n    ],\n    \"x-swgg-apiDict\": {\n        \"operationId.file.crudCountManyByQuery\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudSetOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudGetManyByQuery\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudRemoveOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudUpdateOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.fileGetOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.fileUploadManyByForm.1\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.addPet\": {\n            _crudType: [\n                \"crudSetOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.pet.crudGetManyByQuery\": {\n            _schemaName: \"Pet\"\n        },\n        \"operationId.deletePet\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.findPetsByStatus\": {\n            _crudType: [\n                \"crudGetManyByQuery\"\n            ],\n            _queryWhere: \"{\\\"status\\\":{\\\"$in\\\":{{status jsonStringify}}}}\",\n            _schemaName: \"Pet\"\n        },\n        \"operationId.findPetsByTags\": {\n            _crudType: [\n                \"crudGetManyByQuery\"\n            ],\n            _queryWhere: \"{\\\"tags.name\\\":{\\\"$in\\\":{{tags jsonStringify}}}}\",\n            _schemaName: \"Pet\"\n        },\n        \"operationId.getPetById\": {\n            _crudType: [\n                \"crudGetOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.updatePet\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.updatePetWithForm\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.uploadFile\": {\n            _crudType: [\n                \"fileUploadManyByForm\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.store.crudGetManyByQuery\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.store.crudUpdateOneById.id.id\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.deleteOrder\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.getInventory\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.getOrderById\": {\n            _crudType: [\n                \"crudGetOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.placeOrder\": {\n            _crudType: [\n                \"crudSetOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.createUser\": {\n            _crudType: [\n                \"crudSetOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.createUsersWithArrayInput\": {\n            _crudType: [\n                \"crudSetManyById\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.createUsersWithListInput\": {\n            _crudType: [\n                \"crudSetManyById\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudCountManyByQuery\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudSetOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudRemoveOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudGetManyByQuery\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudUpdateOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.deleteUser\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.getUserByName\": {\n            _crudType: [\n                \"crudGetOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.loginUser\": {\n            _crudType: [\n                \"userLoginByPassword\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.logoutUser\": {\n            _crudType: [\n                \"userLogout\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.updateUser\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.user.userLoginByPassword\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.userLogout\": {\n            _schemaName: \"User\"\n        }\n    }\n});\n/* validateLineSortedReset */\n// init db\nglobalThis.utility2_dbSeedList = [{\n    dbRowList: [\n        {\n            id: \"testCase_swaggerUiLogoSmall\",\n            fileBlob: local.swgg.templateSwaggerUiLogoSmallBase64,\n            fileContentType: \"image/png\",\n            fileDescription: \"swagger-ui logo\",\n            fileFilename: \"swaggerUiLogoSmall.png\"\n        }\n    ],\n    idIndexCreateList: [\n        {\n            name: \"id\"\n        }\n    ],\n    name: \"File\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                id: 0,\n                name: \"birdie\",\n                photoUrls: [],\n                status: \"available\",\n                tags: [\n                    {\n                        name: \"bird\"\n                    }\n                ]\n            }, {\n                id: 1,\n                name: \"doggie\",\n                status: \"pending\",\n                photoUrls: [],\n                tags: [\n                    {\n                        name: \"dog\"\n                    }\n                ]\n            }, {\n                id: 2,\n                name: \"fishie\",\n                photoUrls: [],\n                status: \"sold\",\n                tags: [\n                    {\n                        name: \"fish\"\n                    }\n                ]\n            }\n        ],\n        // init 100 extra random pets\n        length: 100,\n        override: function (opt) {\n            return {\n                id: opt.ii + 100,\n                name: local.listGetElementRandom([\n                    \"birdie\", \"doggie\", \"fishie\"\n                ]) + \"-\" + (opt.ii + 100),\n                tags: [\n                    {\n                        name: local.listGetElementRandom([\n                            \"female\", \"male\"\n                        ])\n                    }\n                ]\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.Pet\n    }),\n    idIndexCreateList: [\n        {\n            isInteger: true,\n            name: \"id\"\n        }\n    ],\n    name: \"Pet\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                id: 0,\n                petId: 0,\n                status: \"available\"\n            }, {\n                id: 1,\n                petId: 1,\n                status: \"pending\"\n            }, {\n                id: 2,\n                petId: 2,\n                status: \"sold\"\n            }\n        ],\n        // init 100 extra random orders\n        length: 100,\n        override: function (opt) {\n            return {\n                id: opt.ii + 100,\n                petId: opt.ii + 100\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.Order\n    }),\n    idIndexCreateList: [\n        {\n            isInteger: true,\n            name: \"id\"\n        }\n    ],\n    name: \"Order\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                email: \"admin@admin.com\",\n                firstName: \"admin\",\n                id: 0,\n                lastName: \"\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"admin\"\n            }, {\n                email: \"jane@doe.com\",\n                firstName: \"jane\",\n                id: 1,\n                lastName: \"doe\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"jane.doe\"\n            }, {\n                email: \"john@doe.com\",\n                firstName: \"john\",\n                id: 2,\n                lastName: \"doe\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"john.doe\"\n            }\n        ],\n        // init 100 extra random users\n        length: 100,\n        override: function (opt) {\n            return {\n                firstName: local.listGetElementRandom([\n                    \"alice\", \"bob\", \"jane\", \"john\"\n                ]) + \"-\" + (opt.ii + 100),\n                id: opt.ii + 100,\n                lastName: local.listGetElementRandom([\n                    \"doe\", \"smith\"\n                ]) + \"-\" + (opt.ii + 100),\n                password: local.sjclHashScryptCreate(\"secret\"),\n                tags: [\n                    {\n                        name: local.listGetElementRandom([\n                            \"female\", \"male\"\n                        ])\n                    }, {\n                        name: Math.random().toString(36).slice(2)\n                    }\n                ]\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.User\n    }),\n    idIndexCreateList: [\n        {\n            name: \"email\"\n        }, {\n            name: \"id\",\n            isInteger: true\n        }, {\n            name: \"username\"\n        }\n    ],\n    name: \"User\"\n}];\n// seed db\nlocal.db.dbSeed(globalThis.utility2_dbSeedList, local.onErrorThrow);\n// init serverLocal\nlocal.utility2.serverLocalUrlTest = function (url) {\n    url = local.urlParse(url).pathname;\n    return (\n        local.isBrowser\n        && !local.env.npm_config_mode_backend\n        && (\n            /^\\/test\\.|\\/api\\/v0\\//\n        ).test(url)\n    );\n};\n}());\n\n\n\n/* istanbul ignore next */\n// run browser js-env code - init-test\n(function () {\nif (!local.isBrowser) {\n    return;\n}\n// log stderr and stdout to #outputStdout1\n[\"error\", \"log\"].forEach(function (key) {\n    let elem;\n    let fnc;\n    elem = document.querySelector(\n        \"#outputStdout1\"\n    );\n    if (!elem) {\n        return;\n    }\n    fnc = console[key];\n    console[key] = function (...argList) {\n        fnc.apply(console, argList);\n        // append text to #outputStdout1\n        elem.textContent += argList.map(function (arg) {\n            return (\n                typeof arg === \"string\"\n                ? arg\n                : JSON.stringify(arg, null, 4)\n            );\n        }).join(\" \").replace((\n            /\\u001b\\[\\d*m/g\n        ), \"\") + \"\\n\";\n        // scroll textarea to bottom\n        elem.scrollTop = elem.scrollHeight;\n    };\n});\nlocal.objectAssignDefault(local, globalThis.domOnEventDelegateDict);\nglobalThis.domOnEventDelegateDict = local;\nlocal.onEventDomDb = local.db && local.db.onEventDomDb;\nlocal.testRunBrowser = function (evt) {\n/*\n * this function will run browser-tests\n */\n    switch (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && (\n            evt.modeInit\n            || (evt.type + \".\" + (evt.target && evt.target.id))\n        )\n    ) {\n    // custom-case\n    case true:\n        // init ui\n        globalThis.utility2_onReadyBefore.counter += 1;\n        local.swgg.uiEventListenerDict.onEventUiReload(\n            null,\n            globalThis.utility2_onReadyBefore\n        );\n        return;\n    // run browser-tests\n    default:\n        if (\n            (evt.target && evt.target.id) !== \"buttonTestRun1\"\n            && !(evt.modeInit && (\n                /\\bmodeTest=1\\b/\n            ).test(location.search))\n        ) {\n            return;\n        }\n        // show browser-tests\n        if (document.querySelector(\n            \"#htmlTestReport1\"\n        ).style.maxHeight === \"0px\") {\n            globalThis.domOnEventDelegateDict.domOnEventResetOutput();\n            local.uiAnimateSlideDown(document.querySelector(\n                \"#htmlTestReport1\"\n            ));\n            document.querySelector(\n                \"#buttonTestRun1\"\n            ).textContent = \"hide internal test\";\n            local.modeTest = 1;\n            local.testRunDefault(local);\n            return;\n        }\n        // hide browser-tests\n        local.uiAnimateSlideUp(document.querySelector(\n            \"#htmlTestReport1\"\n        ));\n        document.querySelector(\n            \"#buttonTestRun1\"\n        ).textContent = \"run internal test\";\n    }\n};\n\nlocal.testRunBrowser({\n    modeInit: true\n});\n}());\n\n\n\n/* istanbul ignore next */\n// run node js-env code - init-test\n(function () {\nif (local.isBrowser) {\n    return;\n}\n// init exports\nmodule.exports = local;\n/* validateLineSortedReset */\n// init assets\nlocal.assetsDict = local.assetsDict || {};\n[\n    \"assets.index.template.html\",\n    \"assets.swgg.swagger.json\",\n    \"assets.swgg.swagger.server.json\"\n].forEach(function (file) {\n    file = \"/\" + file;\n    local.assetsDict[file] = local.assetsDict[file] || \"\";\n    if (local.fs.existsSync(local.__dirname + file)) {\n        local.assetsDict[file] = local.fs.readFileSync(\n            local.__dirname + file,\n            \"utf8\"\n        );\n    }\n});\n/* validateLineSortedReset */\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.swgg.js\"] =\n    local.assetsDict[\"/assets.swgg.js\"] ||\n    local.fs.readFileSync(local.__dirname + \"/lib.swgg.js\", \"utf8\"\n).replace((/^#!\\//), \"// \");\n/* jslint ignore:end */\n/* validateLineSortedReset */\nlocal.assetsDict[\"/\"] = local.assetsDict[\n    \"/assets.index.template.html\"\n].replace((\n    /\\{\\{env\\.(\\w+?)\\}\\}/g\n), function (match0, match1) {\n    switch (match1) {\n    case \"npm_package_description\":\n        return \"the greatest app in the world!\";\n    case \"npm_package_name\":\n        return \"swgg\";\n    case \"npm_package_nameLib\":\n        return \"swgg\";\n    case \"npm_package_version\":\n        return \"0.0.1\";\n    default:\n        return match0;\n    }\n});\nlocal.assetsDict[\"/assets.example.html\"] = local.assetsDict[\"/\"];\nlocal.assetsDict[\"/index.html\"] = local.assetsDict[\"/\"];\n// init cli\nif (module !== require.main || globalThis.utility2_rollup) {\n    return;\n}\n/* validateLineSortedReset */\nlocal.assetsDict[\"/assets.example.js\"] = (\n    local.assetsDict[\"/assets.example.js\"]\n    || local.fs.readFileSync(__filename, \"utf8\")\n);\nlocal.assetsDict[\"/favicon.ico\"] = local.assetsDict[\"/favicon.ico\"] || \"\";\n// if $npm_config_timeout_exit exists,\n// then exit this process after $npm_config_timeout_exit ms\nif (Number(process.env.npm_config_timeout_exit)) {\n    setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n}\n// start server\nif (globalThis.utility2_serverHttp1) {\n    return;\n}\nprocess.env.PORT = process.env.PORT || \"8081\";\nconsole.error(\"http-server listening on port \" + process.env.PORT);\nlocal.http.createServer(function (req, res) {\n    req.urlParsed = local.url.parse(req.url);\n    if (local.assetsDict[req.urlParsed.pathname] !== undefined) {\n        res.end(local.assetsDict[req.urlParsed.pathname]);\n        return;\n    }\n    res.statusCode = 404;\n    res.end();\n}).listen(process.env.PORT);\n}());\n}());\n```\n\n#### output from browser\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.svg)\n\n\n\n# extra screenshots\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)\n\n\n\n# package.json\n```json\n{\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"description\": \"this zero-dependency package will run a virtual swagger-ui server with persistent-storage in the browser, that your webapp can use (in-place of a real backend), with a working web-demo\",\n    \"devDependencies\": {\n        \"utility2\": \"kaizhu256/node-utility2#alpha\"\n    },\n    \"engines\": {\n        \"node\": \">=10.0\"\n    },\n    \"githubRepoAlias\": \"swgg-io/node-swgg\",\n    \"homepage\": \"https://github.com/kaizhu256/node-swgg\",\n    \"keywords\": [\n        \"openapi\",\n        \"swagger-client\",\n        \"swagger-server\"\n    ],\n    \"license\": \"MIT\",\n    \"main\": \"lib.swgg.js\",\n    \"name\": \"swgg\",\n    \"nameAliasPublish\": \"petstore swagger-lite swaggerdoc\",\n    \"nameLib\": \"swgg\",\n    \"nameOriginal\": \"swgg\",\n    \"os\": [\n        \"darwin\",\n        \"linux\"\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-swgg.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"./npm_scripts.sh\",\n        \"env\": \"env\",\n        \"eval\": \"./npm_scripts.sh\",\n        \"heroku-postbuild\": \"./npm_scripts.sh\",\n        \"postinstall\": \"./npm_scripts.sh\",\n        \"start\": \"./npm_scripts.sh\",\n        \"test\": \"./npm_scripts.sh\",\n        \"utility2\": \"./npm_scripts.sh\"\n    },\n    \"version\": \"2019.8.1\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.gitLog.svg)](https://github.com/kaizhu256/node-swgg/commits)\n\n\n\n# internal build script\n- build_ci.sh\n```shell\n# build_ci.sh\n\n# this shell script will run the build for this package\n\nshBuildCiAfter () {(set -e\n    # shDeployCustom\n    shDeployGithub\n    shDeployHeroku\n    shReadmeTest example.sh\n)}\n\nshBuildCiBefore () {(set -e\n    #!! shNpmTestPublished\n    shReadmeTest example.js\n)}\n\n# run shBuildCi\neval \"$(utility2 source)\"\nshBuildCi\n```\n\n\n\n# misc\n- this package was created with [utility2](https://github.com/kaizhu256/node-utility2)\n","operationId":"x-test-markdown.description","parameters":[],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"tags":["x-test-markdown"]}},"/x-test/crudCountManyByQuery":{"get":{"consumes":[],"operationId":"x-test.crudCountManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"count many TestCrud objects by query","tags":["x-test"]}},"/x-test/crudErrorDelete":{"delete":{"consumes":[],"operationId":"x-test.crudErrorDelete","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorGet":{"get":{"consumes":[],"operationId":"x-test.crudErrorGet","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorHead":{"head":{"consumes":[],"operationId":"x-test.crudErrorHead","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorLogin":{"get":{"consumes":[],"operationId":"x-test.crudErrorLogin","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"login by password","tags":["x-test"]}},"/x-test/crudErrorOptions":{"options":{"consumes":[],"operationId":"x-test.crudErrorOptions","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorPatch":{"patch":{"consumes":[],"operationId":"x-test.crudErrorPatch","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorPost":{"post":{"consumes":[],"operationId":"x-test.crudErrorPost","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorPre":{"get":{"consumes":[],"operationId":"x-test.crudErrorPre","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudErrorPut":{"put":{"consumes":[],"operationId":"x-test.crudErrorPut","parameters":[],"responses":{"500":{"description":"500 error - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return error response","tags":["x-test"]}},"/x-test/crudGetManyByQuery":{"get":{"consumes":[],"operationId":"x-test.crudGetManyByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"},{"default":null,"description":"projection-fields param","format":"json","in":"query","name":"_queryFields","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"string"},"x-swgg-type":"array"},{"default":20,"description":"cursor-limit param","in":"query","name":"_queryLimit","required":true,"type":"integer"},{"default":0,"description":"cursor-skip param","in":"query","name":"_querySkip","type":"integer"},{"default":[{"fieldName":"id"},{"fieldName":"_timeUpdated","isDescending":true}],"description":"cursor-sort param","format":"json","in":"query","name":"_querySort","type":"string","x-swgg-collectionFormat":"json","x-swgg-items":{"type":"object"},"x-swgg-type":"array"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get many TestCrud objects by query","tags":["x-test"]}},"/x-test/crudGetOneById.id.id":{"get":{"consumes":[],"operationId":"x-test.crudGetOneById.id.id","parameters":[{"description":"TestCrud id","in":"query","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get one TestCrud object by id","tags":["x-test"]}},"/x-test/crudGetOneByQuery":{"get":{"consumes":[],"operationId":"x-test.crudGetOneByQuery","parameters":[{"default":"{\"id\":{\"$exists\":true}}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"get one TestCrud object by query","tags":["x-test"]}},"/x-test/crudNullDelete":{"delete":{"consumes":[],"operationId":"x-test.crudNullDelete","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullGet":{"get":{"consumes":[],"operationId":"x-test.crudNullGet","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullHead":{"head":{"consumes":[],"operationId":"x-test.crudNullHead","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullOptions":{"options":{"consumes":[],"operationId":"x-test.crudNullOptions","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullPatch":{"patch":{"consumes":[],"operationId":"x-test.crudNullPatch","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullPost":{"post":{"consumes":[],"operationId":"x-test.crudNullPost","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudNullPut":{"put":{"consumes":[],"operationId":"x-test.crudNullPut","parameters":[],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"return null response","tags":["x-test"]}},"/x-test/crudRemoveManyByQuery":{"delete":{"consumes":[],"operationId":"x-test.crudRemoveManyByQuery","parameters":[{"default":"{\"id\":\"undefined\"}","description":"query param","format":"json","in":"query","name":"_queryWhere","required":true,"type":"string"}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"remove many TestCrud objects by query","tags":["x-test"]}},"/x-test/crudRemoveOneById.id.id":{"delete":{"consumes":[],"operationId":"x-test.crudRemoveOneById.id.id","parameters":[{"description":"TestCrud id","in":"query","name":"id","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"remove one TestCrud object by id","tags":["x-test"]}},"/x-test/crudSetManyById":{"put":{"consumes":[],"operationId":"x-test.crudSetManyById","parameters":[{"description":"TestCrud object","in":"body","name":"body","required":true,"schema":{"items":{"$ref":"#/definitions/TestCrud"},"type":"array"}}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or replace many TestCrud objects","tags":["x-test"]}},"/x-test/crudSetOneById.id.id":{"put":{"consumes":[],"operationId":"x-test.crudSetOneById.id.id","parameters":[{"description":"TestCrud id","in":"query","name":"id","type":"string"},{"description":"TestCrud object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/TestCrud"}}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or replace one TestCrud object by id","tags":["x-test"]}},"/x-test/crudUpdateOneById.id.id":{"patch":{"consumes":[],"operationId":"x-test.crudUpdateOneById.id.id","parameters":[{"description":"TestCrud id","in":"query","name":"id","type":"string"},{"description":"TestCrud object","in":"body","name":"body","required":true,"schema":{"$ref":"#/definitions/TestCrud"},"x-swgg-notRequired":true}],"responses":{"200":{"description":"200 ok - http://jsonapi.org/format/#document-structure-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"create or update one TestCrud object by id","tags":["x-test"]}},"/x-test/errorUndefinedApi":{"get":{"consumes":[],"description":"no description","operationId":"x-test.errorUndefinedApi","parameters":[],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test undefined-api handling-behavior","tags":["x-test"]}},"/x-test/fixErrorSemanticUniquePath/{aa}":{"get":{"consumes":[],"description":"no description","operationId":"x-test.fixErrorSemanticUniquePathAa","parameters":[{"description":"no description","in":"path","name":"aa","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test x-swgg-fixErrorSemanticUniquePath's handling-behavior","tags":["x-test"]}},"/x-test/fixErrorSemanticUniquePath/{bb}#1":{"get":{"consumes":[],"description":"no description","operationId":"x-test.fixErrorSemanticUniquePathBb","parameters":[{"description":"no description","in":"path","name":"bb","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test x-swgg-fixErrorSemanticUniquePath's handling-behavior","tags":["x-test"]}},"/x-test/onErrorJsonapi":{"get":{"consumes":[],"description":"no description","operationId":"x-test.onErrorJsonapi","parameters":[{"description":"data param","format":"json","in":"query","name":"data","type":"string"},{"description":"error param","format":"json","in":"query","name":"error","type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test onErrorJsonapi handling-behavior","tags":["x-test"]}},"/x-test/parametersDefault/{typeStringInPath}":{"post":{"consumes":["application/x-www-form-urlencoded"],"description":"no description","operationId":"x-test.parametersDefault","parameters":[{"default":[false,true],"description":"no description","in":"query","items":{"type":"boolean"},"name":"typeArrayItemsBoolean1","required":true,"type":"array"},{"default":[0,1],"description":"no description","in":"query","items":{"type":"integer"},"name":"typeArrayItemsInteger1","required":true,"type":"array"},{"default":[0.5,1.5],"description":"no description","in":"query","items":{"type":"number"},"name":"typeArrayItemsNumber1","required":true,"type":"array"},{"default":[0.5,1.5],"description":"no description","in":"query","items":{"type":"number"},"maxItems":5,"minItems":1,"name":"typeArrayItemsNumber2","required":true,"type":"array","uniqueItems":true},{"collectionFormat":"multi","default":[0.5,1.5],"description":"no description","in":"formData","items":{"type":"number"},"name":"typeArrayItemsNumberCollectionFormatMultiInFormData","required":true,"type":"array"},{"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsString0","type":"array"},{"default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsString1","required":true,"type":"array"},{"collectionFormat":"csv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatCsv","required":true,"type":"array"},{"default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatJson","required":true,"type":"array","x-swgg-collectionFormat":"json"},{"collectionFormat":"multi","default":["aa","bb"],"description":"no description","in":"formData","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatMultiInFormData","required":true,"type":"array"},{"collectionFormat":"pipes","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatPipes","required":true,"type":"array"},{"collectionFormat":"ssv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatSsv","required":true,"type":"array"},{"collectionFormat":"tsv","default":["aa","bb"],"description":"no description","in":"query","items":{"type":"string"},"name":"typeArrayItemsStringCollectionFormatTsv","required":true,"type":"array"},{"default":["aa","bb"],"description":"no description","enum":["aa","bb"],"in":"query","items":{"type":"string"},"name":"typeArrayItemsStringEnum","required":true,"type":"array"},{"description":"no description","in":"query","name":"typeBoolean0","type":"boolean"},{"default":true,"description":"no description","in":"query","name":"typeBooleanRequired","required":true,"type":"boolean"},{"description":"no description","in":"query","name":"typeInteger0","type":"integer"},{"default":2,"description":"no description","in":"query","maximum":3,"minimum":1,"multipleOf":2,"name":"typeInteger1","type":"integer"},{"default":2,"description":"no description","exclusiveMaximum":true,"exclusiveMinimum":true,"in":"query","maximum":3,"minimum":1,"multipleOf":2,"name":"typeInteger2","type":"integer"},{"description":"no description","in":"query","name":"typeNumber0","type":"number"},{"description":"no description","exclusiveMaximum":true,"in":"query","maximum":-0.25,"multipleOf":0.5,"name":"typeNumber1","type":"number"},{"description":"no description","exclusiveMinimum":true,"in":"query","minimum":0.25,"multipleOf":0.5,"name":"typeNumber2","type":"number"},{"description":"no description","enum":[0.5,1.5],"in":"query","name":"typeNumberEnum","type":"number"},{"default":0.5,"description":"no description","format":"double","in":"query","name":"typeNumberFormatDouble","type":"number"},{"default":0.5,"description":"no description","format":"float","in":"query","name":"typeNumberFormatFloat","type":"number"},{"description":"no description","in":"query","name":"typeString0","type":"string"},{"default":"0123456789012345","description":"no description","in":"query","maxLength":19,"minLength":15,"name":"typeString1","pattern":"^\\w*?$","required":true,"type":"string"},{"description":"no description","in":"query","name":"typeStringApiKey","type":"string","x-swgg-apiKey":true},{"default":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~","description":"\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~","in":"query","name":"typeStringCharsetAscii","required":true,"type":"string"},{"default":[0,1],"description":"no description","format":"binary","in":"query","name":"typeStringFormatBinary","type":"string"},{"default":"AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn8=","description":"no description","format":"byte","in":"query","name":"typeStringFormatByte","type":"string"},{"default":"1970.01.01","description":"no description","format":"date","in":"query","name":"typeStringFormatDate","type":"string"},{"default":"1970-01-01T00:00:00.000Z","description":"no description","format":"date-time","in":"query","name":"typeStringFormatDateTime","type":"string"},{"default":"q@q.com","description":"no description","format":"email","in":"query","name":"typeStringFormatEmail","type":"string"},{"default":"{}","description":"no description","format":"json","in":"query","name":"typeStringFormatJson","type":"string"},{"description":"no description","format":"phone","in":"query","name":"typeStringFormatPhone","type":"string"},{"default":"aa","description":"no description","in":"header","name":"typeStringInHeader","required":true,"type":"string"},{"default":"aa","description":"no description","in":"path","name":"typeStringInPath","required":true,"type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test parameters' default handling-behavior","tags":["x-test"],"x-swgg-required":["typeBooleanRequired"]}},"/x-test/parametersDefaultInFormDataXml":{"post":{"consumes":["application/x-www-form-urlencoded"],"description":"no description","operationId":"x-test.parametersDefaultInFormDataXml","parameters":[{"default":false,"description":"no description","in":"formData","name":"typeBoolean0","type":"boolean"},{"default":0,"description":"no description","in":"formData","name":"typeInteger0","type":"integer"},{"default":0,"description":"no description","in":"formData","name":"typeNumber0","type":"number"},{"default":"aa","description":"no description","in":"formData","name":"typeString0","type":"string"}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test parameters' string-in-body-required handling-behavior","tags":["x-test"],"x-swgg-consumes0":"application/xml"}},"/x-test/parametersObjectInBody":{"post":{"consumes":[],"description":"no description","operationId":"x-test.parametersObjectInBody","parameters":[{"description":"TestMisc object","in":"body","name":"typeObjectInBody","schema":{"$ref":"#/definitions/TestMisc"}}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test parameters' object-in-body handling-behavior","tags":["x-test"]}},"/x-test/parametersStringInBody":{"post":{"consumes":[],"description":"no description","operationId":"x-test.parametersStringInBody","parameters":[{"description":"no description","in":"body","name":"typeStringInBody","schema":{"type":"string"}}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test parameters' string-in-body handling-behavior","tags":["x-test"]}},"/x-test/parametersStringInBodyRequired":{"post":{"consumes":[],"description":"no description","operationId":"x-test.parametersStringInBodyRequired","parameters":[{"description":"no description","in":"body","name":"typeStringInBodyRequired","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"summary":"test parameters' string-in-body-required handling-behavior","tags":["x-test"]}},"/x-test/tags0Filter":{"get":{"consumes":[],"description":"no description","operationId":"_2Fx-test_2Ftags0Filter_20GET","parameters":[],"responses":{"200":{"description":"ok - http://jsonapi.org/format/#document-top-level","schema":{"$ref":"#/definitions/BuiltinJsonapiResponse"}}},"tags":["x-test"]}}},"securityDefinitions":{"api_key":{"in":"header","name":"api_key","type":"apiKey"},"petstore_auth":{"authorizationUrl":"http://petstore.swagger.io/oauth/dialog","flow":"implicit","scopes":{"read:pets":"read your pets","write:pets":"modify pets in your account"},"type":"oauth2"}},"swagger":"2.0","tags":[{"description":"builtin-file model","name":"file"},{"description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"},"name":"pet"},{"description":"Access to Petstore orders","name":"store"},{"description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"},"name":"user"},{"description":"internal test-api","name":"x-test","x-swgg-descriptionLineList":["internal test-api"]},{"description":"# swgg\nthis zero-dependency package will run a virtual swagger-ui server with persistent-storage in the browser, that your webapp can use (in-place of a real backend), with a working web-demo\n\n# live web demo\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app)\n\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app)\n\n\n\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-swgg.svg)](https://travis-ci.org/kaizhu256/node-swgg) [![coverage](https://kaizhu256.github.io/node-swgg/build/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build/coverage.html/index.html)\n\n[![build commit status](https://kaizhu256.github.io/node-swgg/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-swgg)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-swgg/tree/master) | [beta](https://github.com/kaizhu256/node-swgg/tree/beta) | [alpha](https://github.com/kaizhu256/node-swgg/tree/alpha)|\n|--:|:--|:--|:--|\n| test-server-github : | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app) | [![github.com test-server](https://kaizhu256.github.io/node-swgg/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/app)|\n| test-server-heroku : | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-swgg/heroku-logo.75x25.png)](https://h1-swgg-alpha.herokuapp.com)|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/test-report.html)|\n| coverage : | [![coverage](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..master..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-swgg/build..alpha..travis-ci.org/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-swgg/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-swgg/tree/gh-pages/build..alpha..travis-ci.org)|\n\n[![npmPackageListing](https://kaizhu256.github.io/node-swgg/build/screenshot.npmPackageListing.svg)](https://github.com/kaizhu256/node-swgg)\n\n\n\n# table of contents\n1. [cdn download](#cdn-download)\n1. [documentation](#documentation)\n1. [quickstart standalone app](#quickstart-standalone-app)\n1. [quickstart example.js](#quickstart-examplejs)\n1. [extra screenshots](#extra-screenshots)\n1. [package.json](#packagejson)\n1. [changelog of last 50 commits](#changelog-of-last-50-commits)\n1. [internal build script](#internal-build-script)\n1. [misc](#misc)\n\n\n\n# cdn download\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.html](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.html)\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.swagger.json](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.swgg.swagger.json)\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.utility2.rollup.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.utility2.rollup.js)\n\n\n\n# documentation\n#### api doc\n- [https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html)\n\n[![apidoc](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/apidoc.html)\n\n#### cli help\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.npmPackageCliHelp.svg)\n\n#### todo\n- add input-type=date and input-type=time\n- update function swaggerJsonFromAjax to inline definitions\n- add swagger.json editor\n- allow parsing of default path-argument, e.g. /aa/{bb=1}/{cc=2}\n- add hmacSha256 support for wechat-pay\n- add property parameters.x-swgg-persist to persist to localStorage\n- revamp datatable with card-expansion ui\n- add authorization-header hook\n- add middlewareAcl\n- add api userPasswordChange\n- add cached version crudGetManyByQueryCached\n- none\n\n#### changelog 2019.8.1\n- npm publish 2019.8.1\n- create function eventEmitterCreate\n- merge class _http.IncomingMessage, _http.ServerResponse into function _http.request\n- jslint - remove unexpected_a hacks\n- jslint - migrate from let-declaration to var-declaration\n- inline lib.puppeteer.js into assets.app.js\n- remove electron dependency\n- revamp function local.ajaxProgressUpdate with window.domElementAjaxProgress1\n- jslint - remove ternary-operator/newline comment preceding bra\n- jslint - remove allow-method-chain-newline hack\n- jslint - upgrade to jslint edition 2019.8.3\n- rename coverage-hack to hack-istanbul, gotoNext to gotoNext, gotoState to gotoState, jslint-hack to hack-jslint\n- istanbul - switch parser from esprima to acorn v6.3.0\n- none\n\n#### this package requires\n- darwin or linux os\n\n#### this swagger-implementation is compliant with json-schema-validation (draft-04)\n- [https://json-schema.org/draft-04/json-schema-validation.html](https://json-schema.org/draft-04/json-schema-validation.html)\n\n#### this swagger-implementation is compliant with OpenAPI Specification (2.0)\n- [https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md](https://github.com/OAI/OpenAPI-Specification/blob/3.0.0/versions/2.0.md)\n\n\n\n# quickstart standalone app\n#### to run this example, follow instruction in script below\n- [assets.app.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.app.js)\n```shell\n# example.sh\n\n# this shell script will download and run a web-demo of swgg as a standalone app\n\n# 1. download standalone app\ncurl -O https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.app.js\n# 2. run standalone app\nPORT=8081 node ./assets.app.js\n# 3. open a browser to http://127.0.0.1:8081 and play with web-demo\n# 4. edit file assets.app.js to suit your needs\n```\n\n#### output from browser\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.svg)\n\n\n\n# quickstart example.js\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### to run this example, follow instruction in script below\n- [example.js](https://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/example.js)\n```javascript\n/*\nexample.js\n\nthis script will run a web-demo of swgg\n\ninstruction\n    1. save this script as example.js\n    2. run shell-command:\n        $ npm install kaizhu256/node-swgg#alpha && \\\n            PORT=8081 node example.js\n    3. open a browser to http://127.0.0.1:8081 and play with web-demo\n    4. edit this script to suit your needs\n*/\n\n\n\n/* istanbul instrument in package swgg */\n/* istanbul ignore next */\n/* jslint utility2:true */\n(function (globalThis) {\n    \"use strict\";\n    let consoleError;\n    let local;\n    // init globalThis\n    globalThis.globalThis = globalThis.globalThis || globalThis;\n    // init debug_inline\n    if (!globalThis[\"debug\\u0049nline\"]) {\n        consoleError = console.error;\n        globalThis[\"debug\\u0049nline\"] = function (...argList) {\n        /*\n         * this function will both print <argList> to stderr\n         * and return <argList>[0]\n         */\n            // debug argList\n            globalThis[\"debug\\u0049nlineArgList\"] = argList;\n            consoleError(\"\\n\\ndebug\\u0049nline\");\n            consoleError.apply(console, argList);\n            consoleError(\"\\n\");\n            // return arg0 for inspection\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof globalThis.XMLHttpRequest === \"function\"\n        && globalThis.navigator\n        && typeof globalThis.navigator.userAgent === \"string\"\n    );\n    // init function\n    local.assertOrThrow = function (passed, message) {\n    /*\n     * this function will throw err.<message> if <passed> is falsy\n     */\n        let err;\n        if (passed) {\n            return;\n        }\n        err = (\n            (\n                message\n                && typeof message.message === \"string\"\n                && typeof message.stack === \"string\"\n            )\n            // if message is errObj, then leave as is\n            ? message\n            : new Error(\n                typeof message === \"string\"\n                // if message is a string, then leave as is\n                ? message\n                // else JSON.stringify message\n                : JSON.stringify(message, null, 4)\n            )\n        );\n        throw err;\n    };\n    local.fsRmrfSync = function (dir) {\n    /*\n     * this function will sync \"rm -rf\" <dir>\n     */\n        let child_process;\n        try {\n            child_process = require(\"child_process\");\n        } catch (ignore) {\n            return;\n        }\n        child_process.spawnSync(\"rm\", [\n            \"-rf\", dir\n        ], {\n            stdio: [\n                \"ignore\", 1, 2\n            ]\n        });\n    };\n    local.fsWriteFileWithMkdirpSync = function (file, data) {\n    /*\n     * this function will sync write <data> to <file> with \"mkdir -p\"\n     */\n        let fs;\n        try {\n            fs = require(\"fs\");\n        } catch (ignore) {\n            return;\n        }\n        // try to write file\n        try {\n            fs.writeFileSync(file, data);\n        } catch (ignore) {\n            // mkdir -p\n            require(\"child_process\").spawnSync(\n                \"mkdir\",\n                [\n                    \"-p\", require(\"path\").dirname(file)\n                ],\n                {\n                    stdio: [\n                        \"ignore\", 1, 2\n                    ]\n                }\n            );\n            // rewrite file\n            fs.writeFileSync(file, data);\n        }\n    };\n    local.functionOrNop = function (fnc) {\n    /*\n     * this function will if <fnc> exists,\n     * return <fnc>,\n     * else return <nop>\n     */\n        return fnc || local.nop;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (target, source) {\n    /*\n     * this function will if items from <target> are\n     * null, undefined, or empty-string,\n     * then overwrite them with items from <source>\n     */\n        target = target || {};\n        Object.keys(source || {}).forEach(function (key) {\n            if (\n                target[key] === null\n                || target[key] === undefined\n                || target[key] === \"\"\n            ) {\n                target[key] = target[key] || source[key];\n            }\n        });\n        return target;\n    };\n    local.value = function (val) {\n    /*\n     * this function will return <val>\n     */\n        return val;\n    };\n    local.valueOrEmptyList = function (val) {\n    /*\n     * this function will return <val> or []\n     */\n        return val || [];\n    };\n    local.valueOrEmptyObject = function (val) {\n    /*\n     * this function will return <val> or {}\n     */\n        return val || {};\n    };\n    local.valueOrEmptyString = function (val) {\n    /*\n     * this function will return <val> or \"\"\n     */\n        return val || \"\";\n    };\n    // require builtin\n    if (!local.isBrowser) {\n        local.assert = require(\"assert\");\n        local.buffer = require(\"buffer\");\n        local.child_process = require(\"child_process\");\n        local.cluster = require(\"cluster\");\n        local.crypto = require(\"crypto\");\n        local.dgram = require(\"dgram\");\n        local.dns = require(\"dns\");\n        local.domain = require(\"domain\");\n        local.events = require(\"events\");\n        local.fs = require(\"fs\");\n        local.http = require(\"http\");\n        local.https = require(\"https\");\n        local.net = require(\"net\");\n        local.os = require(\"os\");\n        local.path = require(\"path\");\n        local.querystring = require(\"querystring\");\n        local.readline = require(\"readline\");\n        local.repl = require(\"repl\");\n        local.stream = require(\"stream\");\n        local.string_decoder = require(\"string_decoder\");\n        local.timers = require(\"timers\");\n        local.tls = require(\"tls\");\n        local.tty = require(\"tty\");\n        local.url = require(\"url\");\n        local.util = require(\"util\");\n        local.vm = require(\"vm\");\n        local.zlib = require(\"zlib\");\n    }\n}((typeof globalThis === \"object\" && globalThis) || (function () {\n    return Function(\"return this\")(); // jslint ignore:line\n}())));\n\n\n\n(function (local) {\n\"use strict\";\n\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2_rollup\n    || globalThis.utility2_swgg\n    || require(\"swgg\")\n);\n// init exports\nglobalThis.local = local;\n// init assets\nlocal.assetsDict[\"/assets.swgg.swagger.json\"] = (\n    local.assetsDict[\"/assets.swgg.swagger.petstore.json\"]\n);\n// load db\nlocal.db.dbLoad(function () {\n    console.error(\"db loaded from \" + local.storageDir);\n});\n}());\n\n\n\n// run shared js-env code - function\n(function () {\nlocal.middlewareCrudCustom = function (req, response, nextMiddleware) {\n/*\n * this function will run the middleware to run custom-crud-operations\n */\n    let crud;\n    let opt;\n    let result;\n    opt = {};\n    local.gotoNext(opt, function (err, data) {\n        switch (opt.gotoState) {\n        case 1:\n            crud = req.swgg.crud;\n            switch (crud.crudType[0]) {\n            // hack-istanbul - test err handling-behavior\n            case \"crudErrorPre\":\n                opt.gotoNext(local.errDefault);\n                return;\n            case \"getInventory\":\n                crud.dbTable.crudGetManyByQuery({\n                    query: {},\n                    projection: [\n                        \"status\"\n                    ]\n                }, opt.gotoNext);\n                break;\n            default:\n                opt.gotoState = Infinity;\n                opt.gotoNext();\n            }\n            break;\n        case 2:\n            switch (crud.crudType[0]) {\n            case \"getInventory\":\n                result = {};\n                data.forEach(function (element) {\n                    result[element.status] = result[element.status] || 0;\n                    result[element.status] += 1;\n                });\n                opt.gotoNext(null, result);\n                break;\n            }\n            break;\n        case 3:\n            local.swgg.serverRespondJsonapi(req, response, err, data);\n            break;\n        default:\n            nextMiddleware(err, data);\n        }\n    });\n    opt.gotoState = 0;\n    opt.gotoNext();\n};\n\nlocal.middlewareInitCustom = function (req, response, nextMiddleware) {\n/*\n * this function will run the middleware to custom-init <req> and <res>\n */\n    // enable cors\n    // https://en.wikipedia.org/wiki/Cross-origin_resource_sharing\n    response.setHeader(\n        \"Access-Control-Allow-Methods\",\n        \"DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT\"\n    );\n    response.setHeader(\"Access-Control-Allow-Origin\", \"*\");\n    // init content-type\n    response.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n    // ignore .map files\n    if (req.urlParsed.pathname.slice(-4) === \".map\") {\n        local.serverRespondDefault(req, response, 404);\n        return;\n    }\n    nextMiddleware();\n};\n}());\n\n\n\n// run shared js-env code - init-after\n(function () {\n// init assets\n/* jslint ignore:start */\nlocal.assetsDict['/assets.index.template.html'] = local.assetsDict['/assets.swgg.html']\n    .replace((/\\n<\\/script>\\n/), '\\\n\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n<a\\n\\\n    {{#if env.npm_package_homepage}}\\n\\\n    href=\"{{env.npm_package_homepage}}\"\\n\\\n    {{/if env.npm_package_homepage}}\\n\\\n    target=\"_blank\"\\n\\\n>\\n\\\nutility2-comment -->\\n\\\n    {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n</a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" id=\"buttonTestRun1\">run internal test</button><br>\\n\\\n<div class=\"uiAnimateSlide\" id=\"htmlTestReport1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<!-- custom-html-start -->\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbReset\">reset database</button><br>\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbExport\">export database -&gt; file</button><br>\\n\\\n<button class=\"button\" data-onevent=\"onEventDomDb\" data-onevent-db=\"dbImport\">import database &lt;- file</button><br>\\n\\\n</button><br>\\n\\\n<input class=\"onchange zeroPixel\" type=\"file\" id=\"dbImportInput1\">\\n\\\n')\n            .replace('assets.swgg.swagger.json', 'assets.swgg.swagger.server.json')\n            .replace((/\\n<script src=[\\S\\s]*\\n<\\/html>\\n/), '\\\n\\n\\\n<!-- custom-html-end -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore.counter += 1;</script>\\n\\\n<script src=\"jsonp.utility2.stateInit?callback=window.utility2.stateInit\"></script>\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.swgg.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore();</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\n(function () {\\n\\\n\"use strict\";\\n\\\nlet htmlTestReport1;\\n\\\nlet local;\\n\\\nhtmlTestReport1 = document.querySelector(\"#htmlTestReport1\");\\n\\\nlocal = window.utility2;\\n\\\nif (!(htmlTestReport1 && local)) {\\n\\\n    return;\\n\\\n}\\n\\\nlocal.on(\"utility2.testRunProgressUpdate\", function (testReport) {\\n\\\n    htmlTestReport1.innerHTML = local.testReportMerge(testReport, {});\\n\\\n});\\n\\\nlocal.on(\"utility2.testRunStart\", function (testReport) {\\n\\\n    local.uiAnimateSlideDown(htmlTestReport1);\\n\\\n    htmlTestReport1.innerHTML = local.testReportMerge(testReport, {});\\n\\\n});\\n\\\n}());\\n\\\n</script>\\n\\\n</body>\\n\\\n</html>\\n\\\n');\n/* jslint ignore:end */\n\n\n\n// init middleware\nlocal.middlewareList = [\n    local.middlewareInit,\n    local.middlewareForwardProxy,\n    local.middlewareAssetsCached,\n    local.swgg.middlewareRouter,\n    local.swgg.middlewareUserLogin,\n    local.middlewareInitCustom,\n    local.middlewareJsonpStateInit,\n    local.middlewareBodyRead,\n    local.swgg.middlewareBodyParse,\n    local.swgg.middlewareValidate,\n    local.middlewareCrudCustom,\n    local.swgg.middlewareCrudBuiltin,\n    local.swgg.middlewareCrudEnd\n];\nlocal.utility2.middlewareList = local.middlewareList;\n// run test-server\nlocal.testRunServer(local);\n/* validateLineSortedReset */\n// init petstore-api - frontend\nlocal.tmp = JSON.parse(local.assetsDict[\"/assets.swgg.swagger.petstore.json\"]);\ndelete local.tmp.basePath;\ndelete local.tmp.host;\ndelete local.tmp.schemes;\nlocal.swgg.apiUpdate(local.tmp);\n// init petstore-api - backend\nlocal.swgg.apiUpdate({\n    definitions: {\n        File: {\n            allOf: [\n                {\n                    $ref: \"#/definitions/BuiltinFile\"\n                }\n            ]\n        },\n        Pet: {\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        },\n        Order: {\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        },\n        User: {\n            allOf: [\n                {\n                    $ref: \"#/definitions/BuiltinUser\"\n                }\n            ],\n            properties: {\n                _id: {\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeCreated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                _timeUpdated: {\n                    format: \"date-time\",\n                    readOnly: true,\n                    type: \"string\"\n                },\n                email: {\n                    default: \"a@a.com\",\n                    format: \"email\"\n                },\n                id: {\n                    default: 1,\n                    minimum: 1\n                }\n            }\n        }\n    },\n    tags: [\n        {\n            description: \"builtin-file model\",\n            name: \"file\"\n        }\n    ],\n    \"x-swgg-apiDict\": {\n        \"operationId.file.crudCountManyByQuery\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudSetOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudGetManyByQuery\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudRemoveOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.crudUpdateOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.fileGetOneById.id.id\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.file.fileUploadManyByForm.1\": {\n            _schemaName: \"File\"\n        },\n        \"operationId.addPet\": {\n            _crudType: [\n                \"crudSetOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.pet.crudGetManyByQuery\": {\n            _schemaName: \"Pet\"\n        },\n        \"operationId.deletePet\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.findPetsByStatus\": {\n            _crudType: [\n                \"crudGetManyByQuery\"\n            ],\n            _queryWhere: \"{\\\"status\\\":{\\\"$in\\\":{{status jsonStringify}}}}\",\n            _schemaName: \"Pet\"\n        },\n        \"operationId.findPetsByTags\": {\n            _crudType: [\n                \"crudGetManyByQuery\"\n            ],\n            _queryWhere: \"{\\\"tags.name\\\":{\\\"$in\\\":{{tags jsonStringify}}}}\",\n            _schemaName: \"Pet\"\n        },\n        \"operationId.getPetById\": {\n            _crudType: [\n                \"crudGetOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.updatePet\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.updatePetWithForm\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"petId\", \"id\"\n            ],\n            _schemaName: \"Pet\"\n        },\n        \"operationId.uploadFile\": {\n            _crudType: [\n                \"fileUploadManyByForm\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.store.crudGetManyByQuery\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.store.crudUpdateOneById.id.id\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.deleteOrder\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.getInventory\": {\n            _schemaName: \"Order\"\n        },\n        \"operationId.getOrderById\": {\n            _crudType: [\n                \"crudGetOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.placeOrder\": {\n            _crudType: [\n                \"crudSetOneById\", \"orderId\", \"id\"\n            ],\n            _schemaName: \"Order\"\n        },\n        \"operationId.createUser\": {\n            _crudType: [\n                \"crudSetOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.createUsersWithArrayInput\": {\n            _crudType: [\n                \"crudSetManyById\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.createUsersWithListInput\": {\n            _crudType: [\n                \"crudSetManyById\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudCountManyByQuery\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudSetOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudRemoveOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudGetManyByQuery\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.crudUpdateOneById.username.username\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.deleteUser\": {\n            _crudType: [\n                \"crudRemoveOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.getUserByName\": {\n            _crudType: [\n                \"crudGetOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.loginUser\": {\n            _crudType: [\n                \"userLoginByPassword\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.logoutUser\": {\n            _crudType: [\n                \"userLogout\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.updateUser\": {\n            _crudType: [\n                \"crudUpdateOneById\", \"username\", \"username\"\n            ],\n            _schemaName: \"User\"\n        },\n        \"operationId.user.userLoginByPassword\": {\n            _schemaName: \"User\"\n        },\n        \"operationId.user.userLogout\": {\n            _schemaName: \"User\"\n        }\n    }\n});\n/* validateLineSortedReset */\n// init db\nglobalThis.utility2_dbSeedList = [{\n    dbRowList: [\n        {\n            id: \"testCase_swaggerUiLogoSmall\",\n            fileBlob: local.swgg.templateSwaggerUiLogoSmallBase64,\n            fileContentType: \"image/png\",\n            fileDescription: \"swagger-ui logo\",\n            fileFilename: \"swaggerUiLogoSmall.png\"\n        }\n    ],\n    idIndexCreateList: [\n        {\n            name: \"id\"\n        }\n    ],\n    name: \"File\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                id: 0,\n                name: \"birdie\",\n                photoUrls: [],\n                status: \"available\",\n                tags: [\n                    {\n                        name: \"bird\"\n                    }\n                ]\n            }, {\n                id: 1,\n                name: \"doggie\",\n                status: \"pending\",\n                photoUrls: [],\n                tags: [\n                    {\n                        name: \"dog\"\n                    }\n                ]\n            }, {\n                id: 2,\n                name: \"fishie\",\n                photoUrls: [],\n                status: \"sold\",\n                tags: [\n                    {\n                        name: \"fish\"\n                    }\n                ]\n            }\n        ],\n        // init 100 extra random pets\n        length: 100,\n        override: function (opt) {\n            return {\n                id: opt.ii + 100,\n                name: local.listGetElementRandom([\n                    \"birdie\", \"doggie\", \"fishie\"\n                ]) + \"-\" + (opt.ii + 100),\n                tags: [\n                    {\n                        name: local.listGetElementRandom([\n                            \"female\", \"male\"\n                        ])\n                    }\n                ]\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.Pet\n    }),\n    idIndexCreateList: [\n        {\n            isInteger: true,\n            name: \"id\"\n        }\n    ],\n    name: \"Pet\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                id: 0,\n                petId: 0,\n                status: \"available\"\n            }, {\n                id: 1,\n                petId: 1,\n                status: \"pending\"\n            }, {\n                id: 2,\n                petId: 2,\n                status: \"sold\"\n            }\n        ],\n        // init 100 extra random orders\n        length: 100,\n        override: function (opt) {\n            return {\n                id: opt.ii + 100,\n                petId: opt.ii + 100\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.Order\n    }),\n    idIndexCreateList: [\n        {\n            isInteger: true,\n            name: \"id\"\n        }\n    ],\n    name: \"Order\"\n}, {\n    dbRowList: local.swgg.dbRowListRandomCreate({\n        dbRowList: [\n            {\n                email: \"admin@admin.com\",\n                firstName: \"admin\",\n                id: 0,\n                lastName: \"\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"admin\"\n            }, {\n                email: \"jane@doe.com\",\n                firstName: \"jane\",\n                id: 1,\n                lastName: \"doe\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"jane.doe\"\n            }, {\n                email: \"john@doe.com\",\n                firstName: \"john\",\n                id: 2,\n                lastName: \"doe\",\n                password: local.sjclHashScryptCreate(\"secret\"),\n                phone: \"1234-5678\",\n                username: \"john.doe\"\n            }\n        ],\n        // init 100 extra random users\n        length: 100,\n        override: function (opt) {\n            return {\n                firstName: local.listGetElementRandom([\n                    \"alice\", \"bob\", \"jane\", \"john\"\n                ]) + \"-\" + (opt.ii + 100),\n                id: opt.ii + 100,\n                lastName: local.listGetElementRandom([\n                    \"doe\", \"smith\"\n                ]) + \"-\" + (opt.ii + 100),\n                password: local.sjclHashScryptCreate(\"secret\"),\n                tags: [\n                    {\n                        name: local.listGetElementRandom([\n                            \"female\", \"male\"\n                        ])\n                    }, {\n                        name: Math.random().toString(36).slice(2)\n                    }\n                ]\n            };\n        },\n        schema: local.swgg.swaggerJson.definitions.User\n    }),\n    idIndexCreateList: [\n        {\n            name: \"email\"\n        }, {\n            name: \"id\",\n            isInteger: true\n        }, {\n            name: \"username\"\n        }\n    ],\n    name: \"User\"\n}];\n// seed db\nlocal.db.dbSeed(globalThis.utility2_dbSeedList, local.onErrorThrow);\n// init serverLocal\nlocal.utility2.serverLocalUrlTest = function (url) {\n    url = local.urlParse(url).pathname;\n    return (\n        local.isBrowser\n        && !local.env.npm_config_mode_backend\n        && (\n            /^\\/test\\.|\\/api\\/v0\\//\n        ).test(url)\n    );\n};\n}());\n\n\n\n/* istanbul ignore next */\n// run browser js-env code - init-test\n(function () {\nif (!local.isBrowser) {\n    return;\n}\n// log stderr and stdout to #outputStdout1\n[\"error\", \"log\"].forEach(function (key) {\n    let elem;\n    let fnc;\n    elem = document.querySelector(\n        \"#outputStdout1\"\n    );\n    if (!elem) {\n        return;\n    }\n    fnc = console[key];\n    console[key] = function (...argList) {\n        fnc.apply(console, argList);\n        // append text to #outputStdout1\n        elem.textContent += argList.map(function (arg) {\n            return (\n                typeof arg === \"string\"\n                ? arg\n                : JSON.stringify(arg, null, 4)\n            );\n        }).join(\" \").replace((\n            /\\u001b\\[\\d*m/g\n        ), \"\") + \"\\n\";\n        // scroll textarea to bottom\n        elem.scrollTop = elem.scrollHeight;\n    };\n});\nlocal.objectAssignDefault(local, globalThis.domOnEventDelegateDict);\nglobalThis.domOnEventDelegateDict = local;\nlocal.onEventDomDb = local.db && local.db.onEventDomDb;\nlocal.testRunBrowser = function (evt) {\n/*\n * this function will run browser-tests\n */\n    switch (\n        !evt.ctrlKey\n        && !evt.metaKey\n        && (\n            evt.modeInit\n            || (evt.type + \".\" + (evt.target && evt.target.id))\n        )\n    ) {\n    // custom-case\n    case true:\n        // init ui\n        globalThis.utility2_onReadyBefore.counter += 1;\n        local.swgg.uiEventListenerDict.onEventUiReload(\n            null,\n            globalThis.utility2_onReadyBefore\n        );\n        return;\n    // run browser-tests\n    default:\n        if (\n            (evt.target && evt.target.id) !== \"buttonTestRun1\"\n            && !(evt.modeInit && (\n                /\\bmodeTest=1\\b/\n            ).test(location.search))\n        ) {\n            return;\n        }\n        // show browser-tests\n        if (document.querySelector(\n            \"#htmlTestReport1\"\n        ).style.maxHeight === \"0px\") {\n            globalThis.domOnEventDelegateDict.domOnEventResetOutput();\n            local.uiAnimateSlideDown(document.querySelector(\n                \"#htmlTestReport1\"\n            ));\n            document.querySelector(\n                \"#buttonTestRun1\"\n            ).textContent = \"hide internal test\";\n            local.modeTest = 1;\n            local.testRunDefault(local);\n            return;\n        }\n        // hide browser-tests\n        local.uiAnimateSlideUp(document.querySelector(\n            \"#htmlTestReport1\"\n        ));\n        document.querySelector(\n            \"#buttonTestRun1\"\n        ).textContent = \"run internal test\";\n    }\n};\n\nlocal.testRunBrowser({\n    modeInit: true\n});\n}());\n\n\n\n/* istanbul ignore next */\n// run node js-env code - init-test\n(function () {\nif (local.isBrowser) {\n    return;\n}\n// init exports\nmodule.exports = local;\n/* validateLineSortedReset */\n// init assets\nlocal.assetsDict = local.assetsDict || {};\n[\n    \"assets.index.template.html\",\n    \"assets.swgg.swagger.json\",\n    \"assets.swgg.swagger.server.json\"\n].forEach(function (file) {\n    file = \"/\" + file;\n    local.assetsDict[file] = local.assetsDict[file] || \"\";\n    if (local.fs.existsSync(local.__dirname + file)) {\n        local.assetsDict[file] = local.fs.readFileSync(\n            local.__dirname + file,\n            \"utf8\"\n        );\n    }\n});\n/* validateLineSortedReset */\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.swgg.js\"] =\n    local.assetsDict[\"/assets.swgg.js\"] ||\n    local.fs.readFileSync(local.__dirname + \"/lib.swgg.js\", \"utf8\"\n).replace((/^#!\\//), \"// \");\n/* jslint ignore:end */\n/* validateLineSortedReset */\nlocal.assetsDict[\"/\"] = local.assetsDict[\n    \"/assets.index.template.html\"\n].replace((\n    /\\{\\{env\\.(\\w+?)\\}\\}/g\n), function (match0, match1) {\n    switch (match1) {\n    case \"npm_package_description\":\n        return \"the greatest app in the world!\";\n    case \"npm_package_name\":\n        return \"swgg\";\n    case \"npm_package_nameLib\":\n        return \"swgg\";\n    case \"npm_package_version\":\n        return \"0.0.1\";\n    default:\n        return match0;\n    }\n});\nlocal.assetsDict[\"/assets.example.html\"] = local.assetsDict[\"/\"];\nlocal.assetsDict[\"/index.html\"] = local.assetsDict[\"/\"];\n// init cli\nif (module !== require.main || globalThis.utility2_rollup) {\n    return;\n}\n/* validateLineSortedReset */\nlocal.assetsDict[\"/assets.example.js\"] = (\n    local.assetsDict[\"/assets.example.js\"]\n    || local.fs.readFileSync(__filename, \"utf8\")\n);\nlocal.assetsDict[\"/favicon.ico\"] = local.assetsDict[\"/favicon.ico\"] || \"\";\n// if $npm_config_timeout_exit exists,\n// then exit this process after $npm_config_timeout_exit ms\nif (Number(process.env.npm_config_timeout_exit)) {\n    setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n}\n// start server\nif (globalThis.utility2_serverHttp1) {\n    return;\n}\nprocess.env.PORT = process.env.PORT || \"8081\";\nconsole.error(\"http-server listening on port \" + process.env.PORT);\nlocal.http.createServer(function (req, res) {\n    req.urlParsed = local.url.parse(req.url);\n    if (local.assetsDict[req.urlParsed.pathname] !== undefined) {\n        res.end(local.assetsDict[req.urlParsed.pathname]);\n        return;\n    }\n    res.statusCode = 404;\n    res.end();\n}).listen(process.env.PORT);\n}());\n}());\n```\n\n#### output from browser\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/app/assets.example.html)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.svg)\n\n\n\n# extra screenshots\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp%252Fassets.swgg.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithub.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployGithubTest.browser.%252Fnode-swgg%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252Fassets.swgg.html.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHeroku.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.deployHerokuTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.npmTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleJs.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-swgg/build/screenshot.testExampleSh.browser.%252F.png)\n\n\n\n# package.json\n```json\n{\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"description\": \"this zero-dependency package will run a virtual swagger-ui server with persistent-storage in the browser, that your webapp can use (in-place of a real backend), with a working web-demo\",\n    \"devDependencies\": {\n        \"utility2\": \"kaizhu256/node-utility2#alpha\"\n    },\n    \"engines\": {\n        \"node\": \">=10.0\"\n    },\n    \"githubRepoAlias\": \"swgg-io/node-swgg\",\n    \"homepage\": \"https://github.com/kaizhu256/node-swgg\",\n    \"keywords\": [\n        \"openapi\",\n        \"swagger-client\",\n        \"swagger-server\"\n    ],\n    \"license\": \"MIT\",\n    \"main\": \"lib.swgg.js\",\n    \"name\": \"swgg\",\n    \"nameAliasPublish\": \"petstore swagger-lite swaggerdoc\",\n    \"nameLib\": \"swgg\",\n    \"nameOriginal\": \"swgg\",\n    \"os\": [\n        \"darwin\",\n        \"linux\"\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-swgg.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"./npm_scripts.sh\",\n        \"env\": \"env\",\n        \"eval\": \"./npm_scripts.sh\",\n        \"heroku-postbuild\": \"./npm_scripts.sh\",\n        \"postinstall\": \"./npm_scripts.sh\",\n        \"start\": \"./npm_scripts.sh\",\n        \"test\": \"./npm_scripts.sh\",\n        \"utility2\": \"./npm_scripts.sh\"\n    },\n    \"version\": \"2019.8.1\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screenshot](https://kaizhu256.github.io/node-swgg/build/screenshot.gitLog.svg)](https://github.com/kaizhu256/node-swgg/commits)\n\n\n\n# internal build script\n- build_ci.sh\n```shell\n# build_ci.sh\n\n# this shell script will run the build for this package\n\nshBuildCiAfter () {(set -e\n    # shDeployCustom\n    shDeployGithub\n    shDeployHeroku\n    shReadmeTest example.sh\n)}\n\nshBuildCiBefore () {(set -e\n    #!! shNpmTestPublished\n    shReadmeTest example.js\n)}\n\n# run shBuildCi\neval \"$(utility2 source)\"\nshBuildCi\n```\n\n\n\n# misc\n- this package was created with [utility2](https://github.com/kaizhu256/node-utility2)\n","name":"x-test-markdown"}],"x-swgg-apiDict":{"operationId.addPet":{"_crudType":["crudSetOneById","petId","id"],"_schemaName":"Pet"},"operationId.createUser":{"_crudType":["crudSetOneById","username","username"],"_schemaName":"User"},"operationId.createUsersWithArrayInput":{"_crudType":["crudSetManyById"],"_schemaName":"User"},"operationId.createUsersWithListInput":{"_crudType":["crudSetManyById"],"_schemaName":"User"},"operationId.deleteOrder":{"_crudType":["crudRemoveOneById","orderId","id"],"_schemaName":"Order"},"operationId.deletePet":{"_crudType":["crudRemoveOneById","petId","id"],"_schemaName":"Pet"},"operationId.deleteUser":{"_crudType":["crudRemoveOneById","username","username"],"_schemaName":"User"},"operationId.file.crudCountManyByQuery":{"_schemaName":"File"},"operationId.file.crudGetManyByQuery":{"_schemaName":"File"},"operationId.file.crudRemoveOneById.id.id":{"_schemaName":"File"},"operationId.file.crudSetOneById.id.id":{"_schemaName":"File"},"operationId.file.crudUpdateOneById.id.id":{"_schemaName":"File"},"operationId.file.fileGetOneById.id.id":{"_schemaName":"File"},"operationId.file.fileUploadManyByForm.1":{"_schemaName":"File"},"operationId.file.fileUploadManyByForm.2":{"_schemaName":"File"},"operationId.findPetsByStatus":{"_crudType":["crudGetManyByQuery"],"_queryWhere":"{\"status\":{\"$in\":{{status jsonStringify}}}}","_schemaName":"Pet"},"operationId.findPetsByTags":{"_crudType":["crudGetManyByQuery"],"_queryWhere":"{\"tags.name\":{\"$in\":{{tags jsonStringify}}}}","_schemaName":"Pet"},"operationId.getInventory":{"_schemaName":"Order"},"operationId.getOrderById":{"_crudType":["crudGetOneById","orderId","id"],"_schemaName":"Order"},"operationId.getPetById":{"_crudType":["crudGetOneById","petId","id"],"_schemaName":"Pet"},"operationId.getUserByName":{"_crudType":["crudGetOneById","username","username"],"_schemaName":"User"},"operationId.loginUser":{"_crudType":["userLoginByPassword"],"_schemaName":"User"},"operationId.logoutUser":{"_crudType":["userLogout"],"_schemaName":"User"},"operationId.pet.crudGetManyByQuery":{"_schemaName":"Pet"},"operationId.placeOrder":{"_crudType":["crudSetOneById","orderId","id"],"_schemaName":"Order"},"operationId.store.crudGetManyByQuery":{"_schemaName":"Order"},"operationId.store.crudUpdateOneById.id.id":{"_schemaName":"Order"},"operationId.updatePet":{"_crudType":["crudUpdateOneById","petId","id"],"_schemaName":"Pet"},"operationId.updatePetWithForm":{"_crudType":["crudUpdateOneById","petId","id"],"_schemaName":"Pet"},"operationId.updateUser":{"_crudType":["crudUpdateOneById","username","username"],"_schemaName":"User"},"operationId.uploadFile":{"_crudType":["fileUploadManyByForm"],"_schemaName":"User"},"operationId.user.crudCountManyByQuery":{"_schemaName":"User"},"operationId.user.crudGetManyByQuery":{"_schemaName":"User"},"operationId.user.crudRemoveOneById.username.username":{"_schemaName":"User"},"operationId.user.crudSetOneById.username.username":{"_schemaName":"User"},"operationId.user.crudUpdateOneById.username.username":{"_schemaName":"User"},"operationId.user.userLoginByPassword":{"_schemaName":"User"},"operationId.user.userLogout":{"_schemaName":"User"},"operationId.x-test.crudCountManyByQuery":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorDelete":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorGet":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorHead":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorLogin":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorOptions":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorPatch":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorPost":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorPre":{"_schemaName":"TestCrud"},"operationId.x-test.crudErrorPut":{"_schemaName":"TestCrud"},"operationId.x-test.crudGetManyByQuery":{"_schemaName":"TestCrud"},"operationId.x-test.crudGetOneById.id.id":{"_schemaName":"TestCrud"},"operationId.x-test.crudGetOneByQuery":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullDelete":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullGet":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullHead":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullOptions":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullPatch":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullPost":{"_schemaName":"TestCrud"},"operationId.x-test.crudNullPut":{"_schemaName":"TestCrud"},"operationId.x-test.crudRemoveManyByQuery":{"_schemaName":"TestCrud"},"operationId.x-test.crudRemoveOneById.id.id":{"_schemaName":"TestCrud"},"operationId.x-test.crudSetManyById":{"_schemaName":"TestCrud"},"operationId.x-test.crudSetOneById.id.id":{"_schemaName":"TestCrud"},"operationId.x-test.crudUpdateOneById.id.id":{"_schemaName":"TestCrud"}},"x-swgg-downloadStandaloneApp":"http://kaizhu256.github.io/node-swgg/build..beta..travis-ci.org/app/assets.app.js","x-swgg-fixErrorSemanticUniquePath":true,"x-swgg-onEventDomDb":true,"x-swgg-tagNameList":["file","pet","store","user","x-test","x-test-markdown"],"x-swgg-tags0-override":{"x-test":{"description":"internal test-api","x-swgg-descriptionLineList":["internal test-api"]}}}
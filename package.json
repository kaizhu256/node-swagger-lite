{
    "package.json": true,
    "author": "kai zhu <kaizhu256@gmail.com>",
    "bin": { "swagger-lite": "index.js" },
    "dependencies": {
        "nedb-lite": "2016.1.3",
        "utility2": "2016.3.4"
    },
    "description": "this package will run a standalone swagger-ui server backed by nedb",
    "devDependencies": {
        "electron-lite": "2016.3.3"
    },
    "engines": { "node": ">=4.0" },
    "keywords": [
        "api", "admin", "admin-ui",
        "browser",
        "cms", "crud",
        "db",
        "light", "lightweight", "lite",
        "mongo", "mongodb",
        "nedb",
        "standalone", "swagger", "swagger-ui",
        "web"
    ],
    "license": "MIT",
    "name": "swagger-lite",
    "os": ["darwin", "linux"],
    "repository": {
        "type": "git",
        "url": "https://github.com/kaizhu256/node-swagger-lite.git"
    },
    "scripts": {
        "build-ci": "utility2 shRun shReadmeBuild",
        "build-doc": ". node_modules/.bin/utility2 && shReadmeExportScripts && cp $(shFileTrimLeft tmp/README.package.json) package.json && utility2 shRun shDocApiCreate \"module.exports={ exampleFileList:['README.md','test.js','index.js'], moduleDict:{ 'swagger-lite':{aliasList:['swgg'],exports:require('./index.js')}, 'swagger-lite.Nedb':{aliasList:['Nedb','collection'],exports:require('./index.js').Nedb}, 'swagger-lite.Nedb.prototype':{aliasList:['collection'], exports:require('./index.js').Nedb.prototype}, 'swagger-lite.Nedb.storage':{aliasList:['storage'], exports:require('./index.js').Nedb.storage}, 'swagger-lite.api':{aliasList:['api'],exports:require('./index.js').api}, 'swagger-lite.tools.v2':{aliasList:['tools.v2'], exports:require('./index.js').tools.v2.__proto__} } }\"",
















        "postinstall": "node index.js postinstall",
        "start": "export PORT=${PORT:-8080} && export npm_config_mode_auto_restart=1 && utility2 shRun shIstanbulCover node test.js",


        "test": ". node_modules/.bin/utility2 && shReadmeExportScripts && cp $(shFileTrimLeft tmp/README.package.json) package.json && export PORT=$(utility2 shServerPortRandom) && utility2 test node test.js",




        "test-published": "utility2 shRun shNpmTestPublished"
    },
    "version": "2016.3.1"
}